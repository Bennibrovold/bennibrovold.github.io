{"version":3,"sources":["CitizenAPI.js","stores/CitizenStore.js","stores/MeterStore.js","components/Blocks/MeterMeasurements/index.js","components/Blocks/Payment/index.js","components/Blocks/Login/index.js","components/Layouts/Header/index.js","components/Layouts/Footer/index.js","components/Blocks/Profile/index.js","components/Blocks/MainPage/about.js","components/Blocks/MainPage/choice.js","components/Blocks/MainPage/using.js","components/Blocks/MainPage/index.js","schemes/registerForm.js","components/Blocks/Register/index.js","components/Blocks/Votes/timer.js","components/Blocks/Votes/votesPeople.js","components/Blocks/Votes/index.js","admin/Admin/index.js","components/Layouts/layout.js","components/Layouts/admin/menu.js","components/Layouts/admin/AuthProvide/auth.js","components/Layouts/admin/Users/index.js","components/Layouts/admin/layout.js","App.js","index.js","images/Hypp150.jpg","images/avatar.png"],"names":["getProfile","userId","console","log","fetch","method","Accept","then","res","json","data","CitizenStore","isAuthenticated","citizen","isLoading","login","_callee","params","regenerator_default","a","wrap","_context","prev","next","_this","stop","logout","checkSession","_callee2","token","_context2","_callee3","_context3","CitizenAPI","decorate","observable","action","MeterMeasurements","onHandlePayment","e","_this2","this","react_default","createElement","react","Container","fluid","className","Form_default","Row","Group","as","Col","xs","md","Label","Control","placeholder","lib","striped","meter","type","tarif","start_measure","final_measure","expenses","sum","hover","isKey","dataField","Button","variant","onClick","props","history","push","React","Component","withRouter","Payment","controlId","name","onHandleLogin","Login","state","redirect","email","password","event","preventDefault","cookies","set","store","setState","Object","defineProperty","target","value","react_router","to","onChange","changeValue","observer","withCookies","Header","get","remove","Navbar","expand","Brand","href","alt","src","require","Toggle","Collapse","id","Nav","Item","react_router_dom","NavDropdown","title","Divider","onEventLogout","Footer","Container_Container","lg","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","firstname","lastname","patronymic","role","city","building","entrance","stage","managementCompany","street","house","housing","apartment","Image","horizontal","About","class","Choice","Using","ScrollReveal","reveal","scale","MainPage","navigate","sync","redirectTo","choice","about","using","RegisterForm","Yup","shape","required","min","Register","date","re_password","errors","onHandleRegister","length","formik_esm","initialValues","username","validationSchema","registerForm","onSubmit","values","setTimeout","alert","JSON","stringify","render","_ref","touched","Check","Input","index","time","seconds","timer","startTimer","bind","assertThisInitialized","countDown","secs","divisor_for_minutes","divisor_for_seconds","h","Math","floor","m","s","ceil","timeLeftVar","secondsToTime","setInterval","clearInterval","show","changeShow","Table_Table","unstackable","HeaderCell","Body","votes","map","item","Cell","initials","vote","questions","for","against","notVoted","currentQuestion","effect","watch","done","showVotes","text","video","completed","answer","arg","assign","objectSpread","_this3","Table","bordered","video_react_lib","playsInline","poster","onMouseEnter","hoverWatch","onMouseLeave","aria-hidden","votesPeople","Spinner","animation","key","doVote","pathname","from","location","Layouts_Header","children","Layouts_Footer","Menu","auth","AUTH_LOGIN","Request","body","headers","Headers","Content-Type","localStorage","setItem","Promise","resolve","Users","dataProvider","simpleRestProvider","url","options","arguments","undefined","getItem","concat","fetchUtils","fetchJson","esm_Admin","authProvider","Resource","list","meterStore","MeterStore","App","AppRoute","component","Layout","layout","rest","objectWithoutProperties","PrivateRoute","_ref2","basename","path","Blocks_Login","Blocks_Register","exact","Blocks_MainPage","Profile","Votes","Blocks_MeterMeasurements","Blocks_Payment","adminLayout","Admin","ReactDOM","src_App_0","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"2QAmDaA,EAAa,SAACC,GAIvB,OAHAC,QAAQC,IAAI,yBAGLC,MAFG,0CAA4CH,EAEpC,CAAEI,OAAQ,MAAOC,OAAU,qBAC5CC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAACG,GAAD,OAAUA,KCtDdC,mDACFC,iBAAkB,OAClBC,QAAU,QACVC,WAAY,OAEZC,4CAAQ,SAAAC,EAAOC,GAAP,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAKHC,EAAKZ,iBAAkB,EALpB,wBAAAS,EAAAI,SAAAT,iEAQRU,OAAS,WACLF,EAAKZ,iBAAkB,QAG3Be,mDAAe,SAAAC,EAAOC,GAAP,OAAAX,EAAAC,EAAAC,KAAA,SAAAU,GAAA,cAAAA,EAAAR,KAAAQ,EAAAP,MAAA,OAID,SAAVM,IAAmBL,EAAKZ,iBAAkB,GAJ/B,wBAAAkB,EAAAL,SAAAG,iEAOf5B,iDAAa,SAAA+B,EAAO9B,GAAP,OAAAiB,EAAAC,EAAAC,KAAA,SAAAY,GAAA,cAAAA,EAAAV,KAAAU,EAAAT,MAAA,cACTrB,QAAQC,IAAI,cACZqB,EAAKV,WAAY,EACjBmB,EAAsBhC,GAHb+B,EAAAT,KAAA,EAIHU,EAAsBhC,GAAQM,KAAK,SAAAG,GACrCc,EAAKV,WAAY,EACjBU,EAAKX,QAAUH,IANV,wBAAAsB,EAAAP,SAAAM,6DAYjBG,YAASvB,EAAc,CACnBC,gBAAiBuB,IACjBpB,MAAOqB,IACPpC,WAAYoC,IACZT,aAAcS,MAGHzB,QCzCAA,2FCGT0B,qNAMFC,gBAAkB,SAACC,0HAEV,IAAAC,EAAAC,KAkCL,OACIC,EAAAvB,EAAAwB,cAACC,EAAA,SAAD,KACIF,EAAAvB,EAAAwB,cAACE,EAAA,EAAD,CAAWC,OAAK,EAACC,UAAU,iBAC3BL,EAAAvB,EAAAwB,cAAA,yGACAD,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAD,KACIuB,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAK8B,IAAN,KACIP,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAK+B,MAAN,CAAYC,GAAIC,IAAKC,GAAI,EAAGC,GAAI,GAC5BZ,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAKoC,MAAN,yFACAb,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAKqC,QAAN,CAAcC,YAAY,gBAE9Bf,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAK+B,MAAN,CAAYC,GAAIC,IAAKC,GAAI,EAAGC,GAAI,GAC5BZ,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAKoC,MAAN,mFACAb,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAKqC,QAAN,CAAcC,YAAY,kBAItCf,EAAAvB,EAAAwB,cAACe,EAAA,eAAD,CAAgBC,SAAO,EAACjD,KAjDjB,CAAC,CACZkD,MAAO,WACPC,KAAM,4EACNC,MAAO,0GACPC,cAAe,qCACfC,cAAe,qCACfC,SAAU,mCACVC,IAAK,UACN,CACCN,MAAO,WACPC,KAAM,4EACNC,MAAO,0GACPC,cAAe,qCACfC,cAAe,qCACfC,SAAU,mCACVC,IAAK,YACN,CACCN,MAAO,WACPC,KAAM,uFACNC,MAAO,+DACPC,cAAe,qCACfC,cAAe,qCACfC,SAAU,GACVC,IAAK,YACN,CACCN,MAAO,WACPC,KAAM,uFACNC,MAAO,8DACPC,cAAe,qCACfC,cAAe,qCACfC,SAAU,GACVC,IAAK,KAkBuCC,OAAK,GACzCzB,EAAAvB,EAAAwB,cAACe,EAAA,kBAAD,CAAmBU,OAAK,EAACC,UAAU,SAAnC,8CACA3B,EAAAvB,EAAAwB,cAACe,EAAA,kBAAD,CAAmBW,UAAU,QAA7B,sBACA3B,EAAAvB,EAAAwB,cAACe,EAAA,kBAAD,CAAmBW,UAAU,SAA7B,kCACA3B,EAAAvB,EAAAwB,cAACe,EAAA,kBAAD,CAAmBW,UAAU,iBAA7B,iHACA3B,EAAAvB,EAAAwB,cAACe,EAAA,kBAAD,CAAmBW,UAAU,iBAA7B,2GACA3B,EAAAvB,EAAAwB,cAACe,EAAA,kBAAD,CAAmBW,UAAU,YAA7B,0FACA3B,EAAAvB,EAAAwB,cAACe,EAAA,kBAAD,CAAmBW,UAAU,OAA7B,MAEJ3B,EAAAvB,EAAAwB,cAAA,WACID,EAAAvB,EAAAwB,cAAA,wHACAD,EAAAvB,EAAAwB,cAAA,uEACAD,EAAAvB,EAAAwB,cAAA,wHAEJD,EAAAvB,EAAAwB,cAAC2B,EAAA,EAAD,CAAQC,QAAQ,UAAUV,KAAK,SAASW,QAAS,kBAAMhC,EAAKiC,MAAMC,QAAQC,KAAK,cAA/E,6DAxEgBC,IAAMC,YAiFvBC,cAAWzC,GC5CX0C,gOAjCP,OACIrC,EAAAvB,EAAAwB,cAACC,EAAA,SAAD,KACIF,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAD,KACIuB,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAK+B,MAAN,CAAY8B,UAAU,kBAClBtC,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAKoC,MAAN,sEACAb,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAKqC,QAAN,CAAcyB,KAAK,QAAQpB,KAAK,OAAOJ,YAAY,yBAEvDf,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAK+B,MAAN,CAAY8B,UAAU,qBAClBtC,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAKoC,MAAN,sEACAb,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAKqC,QAAN,CAAcyB,KAAK,WAAWpB,KAAK,WAAWJ,YAAY,cAE9Df,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAK8B,IAAN,KACIP,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAK+B,MAAN,CAAYC,GAAIC,IAAKC,GAAI,EAAGC,GAAI,GAC5BZ,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAKoC,MAAN,kFACAb,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAKqC,QAAN,CAAcyB,KAAK,WAAWpB,KAAK,SAASJ,YAAY,KAAKH,GAAI,IACjEZ,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAKqC,QAAN,CAAcyB,KAAK,WAAWpB,KAAK,SAASJ,YAAY,OAAOH,GAAI,KAEvEZ,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAK+B,MAAN,CAAYC,GAAIC,IAAKC,GAAI,EAAGC,GAAI,GAC5BZ,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAKoC,MAAN,mBACAb,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAKqC,QAAN,CAAcC,YAAY,UAGlCf,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAK8B,IAAN,KACIP,EAAAvB,EAAAwB,cAAC2B,EAAA,EAAD,CAAQC,QAAQ,UAAUV,KAAK,SAASW,QAAS/B,KAAKyC,eAAtD,8DA9BFN,IAAMC,+CCGtBM,qNAGFC,MAAQ,CACJC,UAAU,EACVC,MAAO,GACPC,SAAU,MAkBdL,cAAgB,SAACM,GACbA,EAAMC,iBACkB,UAArBjE,EAAK4D,MAAME,OAA6C,UAAxB9D,EAAK4D,MAAMG,WAC1C/D,EAAKiD,MAAMiB,QAAQC,IAAI,QAAQ,GAC/BnE,EAAKiD,MAAMmB,MAAM7E,QACjBS,EAAKqE,SAAS,CAAER,UAAU,+OAf3B5C,KAAKgC,MAAMmB,MAAMhF,iBAEhB6B,KAAKgC,MAAMC,QAAQC,KAAK,2IAIpBpC,GACRE,KAAKoD,SAALC,OAAAC,EAAA,EAAAD,CAAA,GAAiBvD,EAAEyD,OAAOf,KAAO1C,EAAEyD,OAAOC,yCAarC,IAAAzD,EAAAC,KAEL,OAAGA,KAAK2C,MAAMC,SACH3C,EAAAvB,EAAAwB,cAACuD,EAAA,EAAD,CAAUC,GAAG,WAIhBzD,EAAAvB,EAAAwB,cAACC,EAAA,SAAD,KACIF,EAAAvB,EAAAwB,cAACE,EAAA,EAAD,CAAWE,UAAU,mBACjBL,EAAAvB,EAAAwB,cAACM,EAAA,EAAD,KACIP,EAAAvB,EAAAwB,cAACS,EAAA,EAAD,CAAKL,UAAU,eACXL,EAAAvB,EAAAwB,cAAA,sCACAD,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAD,KACIuB,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAK+B,MAAN,CAAY8B,UAAU,kBAClBtC,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAKoC,MAAN,eACAb,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAKqC,QAAN,CAAcyB,KAAK,QAAQpB,KAAK,QAAQuC,SAAU,SAAC7D,GAAD,OAAOC,EAAK6D,YAAY9D,IAAI0D,MAAOxD,KAAK2C,MAAME,MAAO7B,YAAY,uDAEvHf,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAK+B,MAAN,CAAY8B,UAAU,qBAClBtC,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAKoC,MAAN,6CACAb,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAKqC,QAAN,CAAcyB,KAAK,WAAWpB,KAAK,WAAWuC,SAAU,SAAC7D,GAAD,OAAOC,EAAK6D,YAAY9D,IAAI0D,MAAOxD,KAAK2C,MAAMG,SAAU9B,YAAY,qFAEhIf,EAAAvB,EAAAwB,cAAA,UAAQI,UAAU,oCAAoCwB,QAAQ,UAAUV,KAAK,SAASW,QAAS/B,KAAKyC,eAApG,8CAvDhBN,IAAMC,YAqE1BM,EAAQmB,YAASnB,GAEFoB,kBAAYzB,YAAWK,2CCxEhCqB,8LAKE/D,KAAKgC,MAAMmB,MAAMjE,aAAac,KAAKgC,MAAMiB,QAAQe,IAAI,SACrDvG,QAAQC,IAAI,mDAKZsC,KAAKgC,MAAMmB,MAAMlE,SACjBe,KAAKgC,MAAMiB,QAAQgB,OAAO,yCAGrB,IAAAlF,EAAAiB,KAEG7B,EAAoB6B,KAAKgC,MAAMmB,MAA/BhF,gBAER,OACY8B,EAAAvB,EAAAwB,cAACgE,EAAA,EAAD,CAAQ5D,UAAU,aAAa6D,OAAO,MAClClE,EAAAvB,EAAAwB,cAACgE,EAAA,EAAOE,MAAR,CAAc9D,UAAU,UAAU+D,KAAK,SAAQpE,EAAAvB,EAAAwB,cAAA,OAAKoE,IAAI,OAAQC,IAAKC,EAAQ,QAC7EvE,EAAAvB,EAAAwB,cAACgE,EAAA,EAAOO,OAAR,KAAexE,EAAAvB,EAAAwB,cAAA,KAAGI,UAAU,sBAC5BL,EAAAvB,EAAAwB,cAACgE,EAAA,EAAOQ,SAAR,CAAiBC,GAAG,mCAChB1E,EAAAvB,EAAAwB,cAAC0E,EAAA,EAAD,CAAKtE,UAAU,wBACfL,EAAAvB,EAAAwB,cAAC0E,EAAA,EAAIC,KAAL,KACI5E,EAAAvB,EAAAwB,cAAC4E,EAAA,EAAD,CAAMpB,GAAG,KAAT,+CAEAzD,EAAAvB,EAAAwB,cAAC0E,EAAA,EAAIC,KAAL,KACA5E,EAAAvB,EAAAwB,cAAC4E,EAAA,EAAD,CAAMpB,GAAG,QAAT,uBAEAzD,EAAAvB,EAAAwB,cAAC0E,EAAA,EAAIC,KAAL,KACA5E,EAAAvB,EAAAwB,cAAC4E,EAAA,EAAD,CAAMpB,GAAG,YAAT,iEAEAzD,EAAAvB,EAAAwB,cAAC0E,EAAA,EAAIC,KAAL,KACA5E,EAAAvB,EAAAwB,cAAC4E,EAAA,EAAD,CAAMpB,GAAG,UAAT,uEAEAzD,EAAAvB,EAAAwB,cAAC0E,EAAA,EAAIC,KAAL,KACA5E,EAAAvB,EAAAwB,cAAC4E,EAAA,EAAD,CAAMpB,GAAG,aAAT,uDAGkB,IAApBvF,EACE8B,EAAAvB,EAAAwB,cAAC0E,EAAA,EAAD,KACI3E,EAAAvB,EAAAwB,cAAC6E,EAAA,EAAD,CAAaC,MAAM,6CAAUL,GAAG,sBAC5B1E,EAAAvB,EAAAwB,cAAC6E,EAAA,EAAYF,KAAb,CAAkBR,KAAK,YAAvB,8CACApE,EAAAvB,EAAAwB,cAAC6E,EAAA,EAAYF,KAAb,CAAkBR,KAAK,aAAvB,0DACApE,EAAAvB,EAAAwB,cAAC6E,EAAA,EAAYF,KAAb,CAAkBR,KAAK,SAAvB,wCACApE,EAAAvB,EAAAwB,cAAC6E,EAAA,EAAYE,QAAb,MACAhF,EAAAvB,EAAAwB,cAAC6E,EAAA,EAAYF,KAAb,CAAkB9C,QAAS,kBAAMhD,EAAKmG,kBAAtC,oCAIRjF,EAAAvB,EAAAwB,cAAC0E,EAAA,EAAD,KACI3E,EAAAvB,EAAAwB,cAAC0E,EAAA,EAAIC,KAAL,KACI5E,EAAAvB,EAAAwB,cAAC4E,EAAA,EAAD,CAAMpB,GAAG,UAAT,mCAEJzD,EAAAvB,EAAAwB,cAAC0E,EAAA,EAAIC,KAAL,KACI5E,EAAAvB,EAAAwB,cAAC4E,EAAA,EAAD,CAAMpB,GAAG,aAAT,iFAzDnBvB,IAAMC,WAmE3B2B,EAASF,YAASE,GAEHD,kBAAYC,sBC1BZoB,mLAvCP,OACIlF,EAAAvB,EAAAwB,cAACC,EAAA,SAAD,KACYF,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,oBACPL,EAAAvB,EAAAwB,cAACkF,EAAA,EAAD,CAAW9E,UAAU,YACjBL,EAAAvB,EAAAwB,cAACM,EAAA,EAAD,CAAKF,UAAU,mBACXL,EAAAvB,EAAAwB,cAACS,EAAA,EAAD,CAAKL,UAAU,iBAAiBO,GAAI,EAAGD,GAAI,IAAIX,EAAAvB,EAAAwB,cAAA,uBAC3CD,EAAAvB,EAAAwB,cAAA,kCAIJD,EAAAvB,EAAAwB,cAACS,EAAA,EAAD,CAAKL,UAAU,eAAe+E,GAAI,EAAGxE,GAAI,EAAGD,GAAI,GAAGX,EAAAvB,EAAAwB,cAAA,qEAC/CD,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,sBACXL,EAAAvB,EAAAwB,cAAC4E,EAAA,EAAD,CAAMpB,GAAG,KAAT,kCACAzD,EAAAvB,EAAAwB,cAAC4E,EAAA,EAAD,CAAMpB,GAAG,KAAT,UACAzD,EAAAvB,EAAAwB,cAAC4E,EAAA,EAAD,CAAMpB,GAAG,KAAT,kBACAzD,EAAAvB,EAAAwB,cAAC4E,EAAA,EAAD,CAAMpB,GAAG,KAAT,wDAGRzD,EAAAvB,EAAAwB,cAACS,EAAA,EAAD,CAAKL,UAAU,eAAe+E,GAAI,EAAGxE,GAAI,EAAGD,GAAI,GAAGX,EAAAvB,EAAAwB,cAAA,kDAC/CD,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,sBACXL,EAAAvB,EAAAwB,cAAC4E,EAAA,EAAD,CAAMpB,GAAG,KAAT,sBACAzD,EAAAvB,EAAAwB,cAAC4E,EAAA,EAAD,CAAMpB,GAAG,KAAT,gEACAzD,EAAAvB,EAAAwB,cAAC4E,EAAA,EAAD,CAAMpB,GAAG,KAAT,sEACAzD,EAAAvB,EAAAwB,cAAC4E,EAAA,EAAD,CAAMpB,GAAG,KAAT,wDAKpBzD,EAAAvB,EAAAwB,cAACM,EAAA,EAAD,CAAKF,UAAU,sBACPL,EAAAvB,EAAAwB,cAACS,EAAA,EAAD,KACIV,EAAAvB,EAAAwB,cAAA,gIAnCnBiC,IAAMC,+BCkHZE,sBA/GX,SAAAA,EAAYN,GAAO,IAAAjD,EAAA,OAAAsE,OAAAiC,EAAA,EAAAjC,CAAArD,KAAAsC,IACfvD,EAAAsE,OAAAkC,EAAA,EAAAlC,CAAArD,KAAAqD,OAAAmC,EAAA,EAAAnC,CAAAf,GAAAmD,KAAAzF,KAAMgC,KACDW,MAAQ,CACT+C,UAAW,2BACXC,SAAU,uCACVC,WAAY,mDACZ/C,MAAO,uBACPgD,KAAM,qEACNC,KAAM,2EACNC,SAAU,oDACVC,SAAU,EACVC,MAAO,EACPC,kBAAmB,uEACnBC,OAAQ,qEACRC,MAAO,IACPC,QAAS,EACTC,UAAW,IAhBAvH,qHAwBf,OACIkB,EAAAvB,EAAAwB,cAACC,EAAA,SAAD,KACIF,EAAAvB,EAAAwB,cAACE,EAAA,EAAD,CAAWC,OAAK,EAACC,UAAU,qBACvBL,EAAAvB,EAAAwB,cAACM,EAAA,EAAD,KACIP,EAAAvB,EAAAwB,cAACS,EAAA,EAAD,CAAKC,GAAI,GAAIN,UAAU,uBACvBL,EAAAvB,EAAAwB,cAACS,EAAA,EAAD,CAAKC,GAAI,IACLX,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,yBACXL,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,iBACXL,EAAAvB,EAAAwB,cAAA,WACID,EAAAvB,EAAAwB,cAACqG,EAAA,EAAD,CAAOhC,IAAKC,EAAQ,KAA+BnE,OAAK,KAE5DJ,EAAAvB,EAAAwB,cAAA,SAAIF,KAAK2C,MAAM+C,UAAf,IAA2B1F,KAAK2C,MAAMgD,aAIlD1F,EAAAvB,EAAAwB,cAACE,EAAA,EAAD,KACIH,EAAAvB,EAAAwB,cAACM,EAAA,EAAD,KACIP,EAAAvB,EAAAwB,cAACS,EAAA,EAAD,CAAKL,UAAU,qBAAqBO,GAAI,GAAID,GAAI,IACpCX,EAAAvB,EAAAwB,cAAC+E,EAAA,EAAD,CAASuB,YAAU,GAAnB,iHACAvG,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,qBACXL,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,2BAAf,sBACAL,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,0BAA2BN,KAAK2C,MAAM+C,YAEzDzF,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,qBACXL,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,2BAAf,8CACAL,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,0BAA2BN,KAAK2C,MAAMgD,WAEzD1F,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,qBACXL,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,2BAAf,UACAL,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,0BAA2BN,KAAK2C,MAAME,QAEzD5C,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,qBACXL,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,2BAAf,4BACAL,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,0BAA2BN,KAAK2C,MAAMkD,OAEzD5F,EAAAvB,EAAAwB,cAAC+E,EAAA,EAAD,CAASuB,YAAU,GAAnB,wCACAvG,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,qBACXL,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,2BAAf,kCACAL,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,0BAA2BN,KAAK2C,MAAMmD,OAEzD7F,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,qBACXL,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,2BAAf,kCACAL,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,0BAA2BN,KAAK2C,MAAMwD,SAEzDlG,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,qBACXL,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,2BAAf,sBACAL,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,0BAA2BN,KAAK2C,MAAMyD,QAEzDnG,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,qBACXL,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,2BAAf,wCACAL,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,0BAA2BN,KAAK2C,MAAM0D,UAEzDpG,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,qBACXL,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,2BAAf,oDACAL,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,0BAA2BN,KAAK2C,MAAM2D,YAEzDrG,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,qBACXL,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,2BAAf,2DACAL,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,0BAA2BN,KAAK2C,MAAMoD,WAEzD9F,EAAAvB,EAAAwB,cAAC+E,EAAA,EAAD,CAASuB,YAAU,GAAnB,yIACAvG,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,qBACXL,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,2BAAf,oDACAL,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,0BAA2BN,KAAK2C,MAAMiD,aAEzD3F,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,qBACXL,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,2BAAf,uHACAL,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,0BAA2BN,KAAK2C,MAAMuD,oBAEzDjG,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,qBACXL,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,2BAAf,8CACAL,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,0BAA2BN,KAAK2C,MAAMqD,WAEzD/F,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,qBACXL,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,2BAAf,4BACAL,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,0BAA2BN,KAAK2C,MAAMsD,qBAtG/E9D,IAAMC,YCyBbqE,2LAzBP,OACIxG,EAAAvB,EAAAwB,cAACC,EAAA,SAAD,KACIF,EAAAvB,EAAAwB,cAACE,EAAA,EAAD,CAAWC,OAAK,EAACC,UAAU,mBACvBL,EAAAvB,EAAAwB,cAACM,EAAA,EAAD,KACIP,EAAAvB,EAAAwB,cAACE,EAAA,EAAD,CAAWE,UAAU,0BACjBL,EAAAvB,EAAAwB,cAACM,EAAA,EAAD,KACIP,EAAAvB,EAAAwB,cAACS,EAAA,EAAD,CAAKC,GAAI,IACLX,EAAAvB,EAAAwB,cAAA,mKACAD,EAAAvB,EAAAwB,cAAA,igCAEJD,EAAAvB,EAAAwB,cAACS,EAAA,EAAD,CAAKC,GAAI,GAAIN,UAAU,gBACnBL,EAAAvB,EAAAwB,cAAA,KAAGmE,KAAK,sBAAqBpE,EAAAvB,EAAAwB,cAAA,KAAGwG,MAAM,eACtCzG,EAAAvB,EAAAwB,cAAA,KAAGmE,KAAK,sBAAqBpE,EAAAvB,EAAAwB,cAAA,KAAGwG,MAAM,2BACtCzG,EAAAvB,EAAAwB,cAAA,KAAGmE,KAAK,sBAAqBpE,EAAAvB,EAAAwB,cAAA,KAAGwG,MAAM,uBACtCzG,EAAAvB,EAAAwB,cAAA,KAAGmE,KAAK,sBAAqBpE,EAAAvB,EAAAwB,cAAA,KAAGwG,MAAM,kCAjBtDvE,IAAMC,YC+CXuE,mLA3CP,OACI1G,EAAAvB,EAAAwB,cAACC,EAAA,SAAD,KACQF,EAAAvB,EAAAwB,cAACE,EAAA,EAAD,CAAWE,UAAU,uBACjBL,EAAAvB,EAAAwB,cAACM,EAAA,EAAD,KACIP,EAAAvB,EAAAwB,cAACS,EAAA,EAAD,CAAKC,GAAI,GAAIN,UAAU,iBAAgBL,EAAAvB,EAAAwB,cAAA,uHACvCD,EAAAvB,EAAAwB,cAACS,EAAA,EAAD,CAAKL,UAAU,sBAAsBM,GAAI,GAAIC,GAAI,GAC7CZ,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,iBACXL,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,eACXL,EAAAvB,EAAAwB,cAAA,YACID,EAAAvB,EAAAwB,cAAA,KAAGwG,MAAM,uBAGjBzG,EAAAvB,EAAAwB,cAAA,gFACAD,EAAAvB,EAAAwB,cAAA,0TAGRD,EAAAvB,EAAAwB,cAACS,EAAA,EAAD,CAAKL,UAAU,sBAAsBM,GAAI,GAAIC,GAAI,GAC7CZ,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,iBACXL,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,eACXL,EAAAvB,EAAAwB,cAAA,YACID,EAAAvB,EAAAwB,cAAA,KAAGwG,MAAM,sBAGjBzG,EAAAvB,EAAAwB,cAAA,kDACAD,EAAAvB,EAAAwB,cAAA,uPAGRD,EAAAvB,EAAAwB,cAACS,EAAA,EAAD,CAAKL,UAAU,sBAAsBM,GAAI,GAAIC,GAAI,GAC7CZ,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,iBACXL,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,eACXL,EAAAvB,EAAAwB,cAAA,YAAMD,EAAAvB,EAAAwB,cAAA,KAAGwG,MAAM,8BAEnBzG,EAAAvB,EAAAwB,cAAA,8DACAD,EAAAvB,EAAAwB,cAAA,yOArCfiC,IAAMC,oBC2BZwE,8LAvBPC,cAAeC,OAAO,iBAAkB,CAAEC,MAAO,uCAKjD,OACI9G,EAAAvB,EAAAwB,cAACC,EAAA,SAAD,KACQF,EAAAvB,EAAAwB,cAACE,EAAA,EAAD,CAAWE,UAAU,mBACjBL,EAAAvB,EAAAwB,cAACM,EAAA,EAAD,KACIP,EAAAvB,EAAAwB,cAACS,EAAA,EAAD,CAAKC,GAAI,IACLX,EAAAvB,EAAAwB,cAAA,sMACAD,EAAAvB,EAAAwB,cAAA,uOAEJD,EAAAvB,EAAAwB,cAACS,EAAA,EAAD,CAAKL,UAAU,aAAaM,GAAI,GAAIC,GAAI,GAAGZ,EAAAvB,EAAAwB,cAAA,WAAKD,EAAAvB,EAAAwB,cAAA,KAAGwG,MAAM,2BAAzD,4GACAzG,EAAAvB,EAAAwB,cAACS,EAAA,EAAD,CAAKL,UAAU,aAAaM,GAAI,GAAIC,GAAI,GAAGZ,EAAAvB,EAAAwB,cAAA,WAAKD,EAAAvB,EAAAwB,cAAA,KAAGwG,MAAM,uBAAzD,qGACAzG,EAAAvB,EAAAwB,cAACS,EAAA,EAAD,CAAKL,UAAU,aAAaM,GAAI,GAAIC,GAAI,GAAGZ,EAAAvB,EAAAwB,cAAA,WAAKD,EAAAvB,EAAAwB,cAAA,KAAGwG,MAAM,mBAAzD,yGAlBRvE,IAAMC,WC+DX4E,cAvDX,SAAAA,EAAYhF,GAAO,IAAAjD,EAAA,OAAAsE,OAAAiC,EAAA,EAAAjC,CAAArD,KAAAgH,IACfjI,EAAAsE,OAAAkC,EAAA,EAAAlC,CAAArD,KAAAqD,OAAAmC,EAAA,EAAAnC,CAAA2D,GAAAvB,KAAAzF,KAAMgC,KACDW,MAAQ,CACTsE,UAAU,GAHClI,mFAQf8H,cAAeC,OAAO,qBAAsB,CAAEC,MAAO,KACrDF,cAAeC,OAAO,kBACtBD,cAAeK,4CAMflH,KAAKoD,SAAS,CAAE6D,UAAU,qCAGrB,IAAAlH,EAAAC,KAEL,OAAGA,KAAK2C,MAAMsE,UAAYjH,KAAKgC,MAAMmB,MAAMhF,gBAChC8B,EAAAvB,EAAAwB,cAACuD,EAAA,EAAD,CAAUC,GAAG,aAGrB1D,KAAK2C,MAAMsE,WAAajH,KAAKgC,MAAMmB,MAAMhF,gBACjC8B,EAAAvB,EAAAwB,cAACuD,EAAA,EAAD,CAAUC,GAAG,WAIpBzD,EAAAvB,EAAAwB,cAACC,EAAA,SAAD,KACIF,EAAAvB,EAAAwB,cAACE,EAAA,EAAD,CAAWC,OAAK,EAACC,UAAU,qBACvBL,EAAAvB,EAAAwB,cAACM,EAAA,EAAD,KACAP,EAAAvB,EAAAwB,cAACE,EAAA,EAAD,CAAWC,OAAK,EAACC,UAAU,kBACvBL,EAAAvB,EAAAwB,cAACM,EAAA,EAAD,KACIP,EAAAvB,EAAAwB,cAACE,EAAA,EAAD,KACIH,EAAAvB,EAAAwB,cAACM,EAAA,EAAD,KACIP,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,eACXL,EAAAvB,EAAAwB,cAAA,+SACAD,EAAAvB,EAAAwB,cAAA,UAAQI,UAAU,oCAAoCyB,QAAS,kBAAMhC,EAAKoH,eAA1E,2EAMpBlH,EAAAvB,EAAAwB,cAACkH,EAAD,MACAnH,EAAAvB,EAAAwB,cAACmH,EAAD,MACApH,EAAAvB,EAAAwB,cAACoH,EAAD,gBAlDGnF,IAAMC,gDCIdmF,GAXMC,YAAaC,MAAM,CACtC5E,MAAO2E,YAGJ3E,MAAM,yBAEN6E,SAAS,YACZ5E,SAAU0E,YACPG,IAAI,EAAG,oCACPD,SAAS,cCDRE,8MAGFjF,MAAQ,CACJC,UAAU,EACV8C,UAAW,GACXC,SAAU,GACV9C,MAAO,GACPgF,KAAM,GACN/E,SAAU,GACVgF,YAAa,GACbC,OAAQ,MAkBZC,iBAAmB,SAACjF,GAChBA,EAAMC,iBACkB,UAArBjE,EAAK4D,MAAME,OAA6C,UAAxB9D,EAAK4D,MAAMG,WAC1C/D,EAAKiD,MAAMiB,QAAQC,IAAI,QAAQ,GAC/BnE,EAAKiD,MAAMmB,MAAM7E,QACjBS,EAAKqE,SAAS,CAAER,UAAU,+OAf3B5C,KAAKgC,MAAMmB,MAAMhF,iBAEhB6B,KAAKgC,MAAMC,QAAQC,KAAK,2IAIpBpC,GACRE,KAAKoD,SAALC,OAAAC,EAAA,EAAAD,CAAA,GAAiBvD,EAAEyD,OAAOf,KAAO1C,EAAEyD,OAAOC,yCAe1C,OAAGxD,KAAK2C,MAAMC,SACH3C,EAAAvB,EAAAwB,cAACuD,EAAA,EAAD,CAAUC,GAAG,WAIhBzD,EAAAvB,EAAAwB,cAACC,EAAA,SAAD,KACIF,EAAAvB,EAAAwB,cAACE,EAAA,EAAD,CAAWE,UAAU,sBACjBL,EAAAvB,EAAAwB,cAACM,EAAA,EAAD,KACIP,EAAAvB,EAAAwB,cAACS,EAAA,EAAD,CAAKL,UAAU,kBACXL,EAAAvB,EAAAwB,cAAA,gFACEF,KAAK2C,MAAMoF,OAAOE,OAAS,EACzBhI,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,gBACXL,EAAAvB,EAAAwB,cAAA,kDACAD,EAAAvB,EAAAwB,cAAA,UACID,EAAAvB,EAAAwB,cAAA,oDAGN,KAEFD,EAAAvB,EAAAwB,cAACgI,EAAA,EAAD,CAEAC,cAAe,CACXtF,MAAO,GACPuF,SAAU,GACVtF,SAAU,GACVgF,YAAa,GACbpC,UAAW,GACXC,SAAU,GACVkC,KAAM,IAGVQ,iBAAkBC,GAElBC,SAAU,SAAAC,GACNC,WAAW,WACXC,MAAMC,KAAKC,UAAUJ,EAAQ,KAAM,KAChC,MAMPK,OAAQ,SAAAC,GAAA,IAAGf,EAAHe,EAAGf,OAAHe,EAAWC,QAAX,OACJ9I,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAD,CAAM4B,UAAU,kBAChBL,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAK8B,IAAN,KACIP,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAK+B,MAAN,CAAYC,GAAIC,KACZV,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAKoC,MAAN,2BACAb,EAAAvB,EAAAwB,cAACgI,EAAA,EAAD,CAAO1F,KAAK,YAAYlC,UAAU,eAAec,KAAK,UAG1DnB,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAK+B,MAAN,CAAYC,GAAIC,KACZV,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAKoC,MAAN,mDACAb,EAAAvB,EAAAwB,cAACgI,EAAA,EAAD,CAAO1F,KAAK,WAAWlC,UAAU,eAAec,KAAK,WAIjEnB,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAK+B,MAAN,KACIR,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAKoC,MAAN,0GACAb,EAAAvB,EAAAwB,cAACgI,EAAA,EAAD,CAAO1F,KAAK,QAAQlC,UAAU,eAAec,KAAK,QAAQJ,YAAY,iBACpE+G,EAAOlF,OAAU5C,EAAAvB,EAAAwB,cAAA,WAAM6H,EAAOlF,QAGpC5C,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAK+B,MAAN,KACIR,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAKoC,MAAN,kFACAb,EAAAvB,EAAAwB,cAACgI,EAAA,EAAD,CAAO1F,KAAK,WAAWlC,UAAU,eAAec,KAAK,OAAOJ,YAAY,kBAG5Ef,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAK+B,MAAN,CAAY8B,UAAU,oBAClBtC,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAKoC,MAAN,6CACAb,EAAAvB,EAAAwB,cAACgI,EAAA,EAAD,CAAO1F,KAAK,WAAWpB,KAAK,WAAWd,UAAU,eAAeU,YAAY,iBAC1E+G,EAAOjF,UAAa7C,EAAAvB,EAAAwB,cAAA,WAAM6H,EAAOjF,WAGvC7C,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAK+B,MAAN,CAAY8B,UAAU,oBAClBtC,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAKoC,MAAN,oGACAb,EAAAvB,EAAAwB,cAACgI,EAAA,EAAD,CAAO1F,KAAK,cAAcpB,KAAK,WAAWd,UAAU,eAAeU,YAAY,iCAEnFf,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAK+B,MAAN,CAAYkE,GAAG,oBACX1E,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAKsK,MAAN,KACI/I,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAKsK,MAAMC,MAAZ,CAAkB7H,KAAK,aACvBnB,EAAAvB,EAAAwB,cAACK,EAAA7B,EAAKsK,MAAMlI,MAAZ,uEAA+Bb,EAAAvB,EAAAwB,cAAA,KAAGmE,KAAK,UAAR,0DAA/B,2EAIRpE,EAAAvB,EAAAwB,cAAC2B,EAAA,EAAD,CAAQC,QAAQ,UAAUV,KAAK,UAA/B,yBA7Hbe,IAAMC,WA6I7BwF,GAAW/D,YAAS+D,IAEL9D,mBAAYzB,YAAWuF,kECxFvBsB,eA5DX,SAAAA,EAAYlH,GAAM,IAAAjD,EAAA,OAAAsE,OAAAiC,EAAA,EAAAjC,CAAArD,KAAAkJ,IACdnK,EAAAsE,OAAAkC,EAAA,EAAAlC,CAAArD,KAAAqD,OAAAmC,EAAA,EAAAnC,CAAA6F,GAAAzD,KAAAzF,KAAMgC,KACDW,MAAQ,CAAEwG,KAAM,GAAIC,QAASrK,EAAKiD,MAAMoH,SACjDrK,EAAKsK,MAAQ,EACbtK,EAAKuK,WAAavK,EAAKuK,WAAWC,KAAhBlG,OAAAmG,GAAA,EAAAnG,CAAAtE,IAClBA,EAAK0K,UAAY1K,EAAK0K,UAAUF,KAAflG,OAAAmG,GAAA,EAAAnG,CAAAtE,IALCA,6EAQN2K,GACZ,IAEIC,EAAsBD,EAAI,KAG1BE,EAAsBD,EAAsB,GAQhD,MALU,CACRE,EATUC,KAAKC,MAAML,EAAI,MAUzBM,EAPYF,KAAKC,MAAMJ,EAAsB,IAQ7CM,EALYH,KAAKI,KAAKN,gDAWxB5J,KAAKsJ,aACL,IAAIa,EAAcnK,KAAKoK,cAAcpK,KAAK2C,MAAMyG,SAChDpJ,KAAKoD,SAAS,CAAE+F,KAAMgB,yCAKJ,GAAdnK,KAAKqJ,OAAcrJ,KAAK2C,MAAMyG,QAAU,IAC1CpJ,KAAKqJ,MAAQgB,YAAYrK,KAAKyJ,UAAW,0CAM3C,IAAIL,EAAUpJ,KAAK2C,MAAMyG,QAAU,EACnCpJ,KAAKoD,SAAS,CACZ+F,KAAMnJ,KAAKoK,cAAchB,GACzBA,QAASA,IAKI,GAAXA,GACFkB,cAActK,KAAKqJ,wCAKjB,OACIpJ,EAAAvB,EAAAwB,cAAA,WAAMF,KAAK2C,MAAMwG,KAAKU,EAAtB,MAA4B7J,KAAK2C,MAAMwG,KAAKa,EAA5C,MAAkDhK,KAAK2C,MAAMwG,KAAKc,UAzD1D7H,wBCsCL8G,oLApCF,IAAAnK,EAAAiB,KACL,OACIC,EAAAvB,EAAAwB,cAAA,OAAKI,WAA+B,IAApBN,KAAKgC,MAAMuI,KAAgB,oBAAsB,gBAC7DtK,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,kBAAkByB,QAAS,kBAAMhD,EAAKiD,MAAMwI,gBAC3DvK,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,4BACPL,EAAAvB,EAAAwB,cAAA,iDACAD,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,YACfL,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,sBACfL,EAAAvB,EAAAwB,cAACuK,GAAA,EAAD,CAAOC,aAAW,GACdzK,EAAAvB,EAAAwB,cAACuK,GAAA,EAAM1G,OAAP,KACA9D,EAAAvB,EAAAwB,cAACuK,GAAA,EAAMjK,IAAP,KACIP,EAAAvB,EAAAwB,cAACuK,GAAA,EAAME,WAAP,2EACA1K,EAAAvB,EAAAwB,cAACuK,GAAA,EAAME,WAAP,+CAGJ1K,EAAAvB,EAAAwB,cAACuK,GAAA,EAAMG,KAAP,KACE5K,KAAKgC,MAAM6I,MAAMC,IAAI,SAACC,GAAD,OACnB9K,EAAAvB,EAAAwB,cAACuK,GAAA,EAAMjK,IAAP,KACIP,EAAAvB,EAAAwB,cAACuK,GAAA,EAAMO,KAAP,KAAcD,EAAKE,UACnBhL,EAAAvB,EAAAwB,cAACuK,GAAA,EAAMO,KAAP,KACkB,iBAAdD,EAAKG,KACHjL,EAAAvB,EAAAwB,cAAA,QAAMI,UAAU,SAAhB,oDACc,uBAAdyK,EAAKG,KACLjL,EAAAvB,EAAAwB,cAAA,QAAMI,UAAU,OAAhB,iEACAL,EAAAvB,EAAAwB,cAAA,QAAMI,UAAU,SAAhB,sFAzBtB8B,aCwNL8G,eAlNX,SAAAA,EAAYlH,GAAO,IAAAjD,EAAA,OAAAsE,OAAAiC,EAAA,EAAAjC,CAAArD,KAAAkJ,IACfnK,EAAAsE,OAAAkC,EAAA,EAAAlC,CAAArD,KAAAqD,OAAAmC,EAAA,EAAAnC,CAAA6F,GAAAzD,KAAAzF,KAAMgC,KACDW,MAAQ,CACTwI,UAAW,CAAC,IACZD,KAAM,CACFE,IAAK,GACLC,QAAS,GACTC,SAAU,IACdC,gBAAiB,EACjBC,QAAQ,EACRC,MAAO,EACPC,MAAM,EACNC,WAAW,EACXd,MAAO,CACH,CAAEI,SAAU,gEAAeC,KAAM,gBACjC,CAAED,SAAU,gEAAeC,KAAM,gBACjC,CAAED,SAAU,gEAAeC,KAAM,sBACjC,CAAED,SAAU,gEAAeC,KAAM,gBACjC,CAAED,SAAU,gEAAeC,KAAM,gBACjC,CAAED,SAAU,gEAAeC,KAAM,sEACjC,CAAED,SAAU,gEAAeC,KAAM,gBACjC,CAAED,SAAU,gEAAeC,KAAM,gBACjC,CAAED,SAAU,gEAAeC,KAAM,sBACjC,CAAED,SAAU,gEAAeC,KAAM,gBACjC,CAAED,SAAU,gEAAeC,KAAM,sBACjC,CAAED,SAAU,gEAAeC,KAAM,kBAErCnM,EAAKyL,WAAazL,EAAKyL,WAAWjB,KAAhBlG,OAAAmG,GAAA,EAAAnG,CAAAtE,IA3BPA,mFA+BfiB,KAAKoD,SAAS,CAAE+H,UAAW,CACvB,CAAES,KAAM,iOAA8CC,MAAO,kDAAmDC,WAAW,EAAOC,OAAQ,MAC1I,CAAEH,KAAM,ocAA6FC,MAAO,qDAAsDC,WAAW,EAAOC,OAAQ,MAC5L,CAAEH,KAAM,mOAAgDE,WAAW,EAAOC,OAAQ,MAClF,CAAEH,KAAM,mOAAgDE,WAAW,EAAOC,OAAQ,MAClF,CAAEH,KAAM,mOAAgDE,WAAW,EAAOC,OAAQ,MAClF,CAAEH,KAAM,mOAAgDE,WAAW,EAAOC,OAAQ,wCAIlFC,GAAM,IAAAjM,EAAAC,KACVA,KAAKoD,SAAS,CACVoI,OAAQxL,KAAK2C,MAAM4I,gBAAkBvL,KAAK2C,MAAMwI,UAAUlD,OAAS,QAAW,EAC9EsD,gBAAiBvL,KAAK2C,MAAM4I,gBAAkB,EAAIvL,KAAK2C,MAAMwI,UAAUlD,OAAS,EAChFjI,KAAK2C,MAAM4I,gBACXvL,KAAK2C,MAAM4I,gBAAkB,EAAGJ,UAAW9H,OAAO4I,OAAOjM,KAAK2C,MAAMwI,UAAzB9H,OAAAC,EAAA,EAAAD,CAAA,GAAuCrD,KAAK2C,MAAM4I,gBAAlDlI,OAAA6I,GAAA,EAAA7I,CAAA,GAAyErD,KAAK2C,MAAMwI,UAAUnL,KAAK2C,MAAM4I,iBAAzG,CACvCO,WAAW,EAAMC,OAAQC,QAEjCvD,WAAW,WACP1I,EAAKqD,SAAS,CAAEoI,QAAQ,KACzB,MAEoE,IAApExL,KAAK2C,MAAMwI,UAAUnL,KAAK2C,MAAMwI,UAAUlD,OAAS,GAAG6D,WACrD9L,KAAKoD,SAAS,CAAEsI,MAAM,uCAIlBM,GACRhM,KAAKoD,SAAS,CAAEqI,MAAOO,yCAIvBhM,KAAKoD,SAAS,SAAAvE,GAAI,MAAK,CAAE8M,WAAY9M,EAAK8M,8CAGrC,IAAAQ,EAAAnM,KAEG7B,EAAoB6B,KAAKgC,MAAMmB,MAA/BhF,gBAmBR,OAAOA,EACH8B,EAAAvB,EAAAwB,cAACE,EAAA,EAAD,CAAWC,OAAK,EAACC,UAAU,mBACvBL,EAAAvB,EAAAwB,cAACM,EAAA,EAAD,KACIP,EAAAvB,EAAAwB,cAACS,EAAA,EAAD,CAAK0E,GAAI,EAAGxE,GAAI,GAAID,GAAI,GAAIN,UAAU,gBAClCL,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,qBACXL,EAAAvB,EAAAwB,cAAA,kDACAD,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,eACfL,EAAAvB,EAAAwB,cAACkM,GAAA,EAAD,CAAOC,UAAQ,EAAC3K,OAAK,GACjBzB,EAAAvB,EAAAwB,cAAA,aACID,EAAAvB,EAAAwB,cAAA,UACID,EAAAvB,EAAAwB,cAAA,yJACAD,EAAAvB,EAAAwB,cAAA,UAAMF,KAAK2C,MAAMuI,KAAKE,IAAMpL,KAAK2C,MAAMuI,KAAKG,QAAUrL,KAAK2C,MAAMuI,KAAKI,SAAtE,yBAEJrL,EAAAvB,EAAAwB,cAAA,UACID,EAAAvB,EAAAwB,cAAA,8DACAD,EAAAvB,EAAAwB,cAAA,UAAMF,KAAK2C,MAAMuI,KAAKE,IAAtB,yBAEJnL,EAAAvB,EAAAwB,cAAA,UACID,EAAAvB,EAAAwB,cAAA,0EACAD,EAAAvB,EAAAwB,cAAA,UAAMF,KAAK2C,MAAMuI,KAAKG,QAAtB,yBAEJpL,EAAAvB,EAAAwB,cAAA,UACID,EAAAvB,EAAAwB,cAAA,qHACAD,EAAAvB,EAAAwB,cAAA,UAAM4J,KAAKC,OAAO/J,KAAK2C,MAAMuI,KAAKE,IAAMpL,KAAK2C,MAAMuI,KAAKG,QAAUrL,KAAK2C,MAAMuI,KAAKI,UAAY,GAA9F,yBAEJrL,EAAAvB,EAAAwB,cAAA,UACID,EAAAvB,EAAAwB,cAAA,4MACAD,EAAAvB,EAAAwB,cAAA,UAAMF,KAAK2C,MAAMuI,KAAKI,SAAtB,8BAOpBrL,EAAAvB,EAAAwB,cAACS,EAAA,EAAD,CAAK0E,GAAI,EAAGzE,GAAI,GAAIC,GAAI,GAAIP,UAAU,4BAClCL,EAAAvB,EAAAwB,cAACoM,GAAA,OAAD,CACAC,aAAW,EACXC,OAAO,qBACPjI,IAAKvE,KAAK2C,MAAMwI,UAAUnL,KAAK2C,MAAM4I,iBAAiBM,SAE1D5L,EAAAvB,EAAAwB,cAACS,EAAA,EAAD,CAAK0E,GAAI,EAAGzE,GAAI,GAAIC,GAAI,GAAIP,UAAU,gBAC9BL,EAAAvB,EAAAwB,cAAA,0GAAsBD,EAAAvB,EAAAwB,cAACmJ,GAAD,CAAOD,QAAS,SACtCnJ,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,eACXL,EAAAvB,EAAAwB,cAAA,OACII,UAAU,aACVmM,aAAc,kBAAMN,EAAKO,WAAW,IACpCC,aAAc,kBAAMR,EAAKO,WAAW,KACpCzM,EAAAvB,EAAAwB,cAAA,OAAKI,UAAgC,IAArBN,KAAK2C,MAAM8I,MAAc,mBAAqB,eAC1DxL,EAAAvB,EAAAwB,cAAA,KAAGI,UAAU,YAAYsM,cAAY,UAEzC3M,EAAAvB,EAAAwB,cAAA,8DAEJD,EAAAvB,EAAAwB,cAAA,OACII,UAAU,aACVmM,aAAc,kBAAMN,EAAKO,WAAW,IACpCC,aAAc,kBAAMR,EAAKO,WAAW,IACpC3K,QAAS,kBAAMoK,EAAK3B,eACpBvK,EAAAvB,EAAAwB,cAAA,OAAKI,UAAgC,IAArBN,KAAK2C,MAAM8I,MAAc,mBAAqB,eAC1DxL,EAAAvB,EAAAwB,cAAA,KAAGI,UAAU,YAAYsM,cAAY,UAEzC3M,EAAAvB,EAAAwB,cAAA,mFAIhBD,EAAAvB,EAAAwB,cAAC2M,GAAD,CAAahC,MAAO7K,KAAK2C,MAAMkI,MAAON,KAAMvK,KAAK2C,MAAMgJ,UAAWnB,WAAYxK,KAAKwK,cAEvFvK,EAAAvB,EAAAwB,cAACM,EAAA,EAAD,CAAKF,UAAU,eACXL,EAAAvB,EAAAwB,cAACS,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGwE,GAAI,IAGvBpF,EAAAvB,EAAAwB,cAACS,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIwE,GAAI,EAAG/E,UAAU,aAClCL,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,cACVN,KAAK2C,MAAM6I,OAASvL,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,WAAUL,EAAAvB,EAAAwB,cA5ErD,WACT,OAAOD,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,mBAAkBL,EAAAvB,EAAAwB,cAAC4M,GAAA,EAAD,CAASC,UAAU,OAAOjL,QAAQ,cA2EZ,OAAiB,KAC/D7B,EAAAvB,EAAAwB,cAAA,OAAKI,UAAYN,KAAK2C,MAAM6I,OAAS,wBAA0B,cAC3DvL,EAAAvB,EAAAwB,cAAA,SAAIF,KAAK2C,MAAM4I,gBAAkB,GACjCtL,EAAAvB,EAAAwB,cAAA,YAAMD,EAAAvB,EAAAwB,cAAA,UAAMF,KAAK2C,MAAMwI,UAAUnL,KAAK2C,MAAM4I,iBAAiBK,KAAvD,OAEV3L,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,YACfL,EAAAvB,EAAAwB,cAAA,OAAKI,UAAYN,KAAK2C,MAAM6I,OAAS,0BAA4B,gBAC3DxL,KAAK2C,MAAMwI,UAAUL,IAAI,SAACC,EAAM7B,GAAP,OACvBjJ,EAAAvB,EAAAwB,cAAA,OAAK8M,IAAK9D,EAAO5I,UAAWyK,EAAKe,UAAY,kBAAoB5C,IAAUiD,EAAKxJ,MAAM4I,gBAAkB,oBAAsB,cACxHR,EAAKe,UAAY7L,EAAAvB,EAAAwB,cAAA,KAAGI,UAAU,cAAcsM,cAAY,SAAc1D,EAAQ,OAOhGjJ,EAAAvB,EAAAwB,cAAA,WACID,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,eACRN,KAAK2C,MAAM6I,OAIdvL,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,cACXL,EAAAvB,EAAAwB,cAAC2B,EAAA,EAAD,CAAQC,QAAQ,WAAhB,qDALmB7B,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,aAAayB,QAAS,kBAAMoK,EAAKc,OAAO,KAC1EhN,EAAAvB,EAAAwB,cAAC2B,EAAA,EAAD,CAAQC,QAAQ,WAAhB,qDAMD9B,KAAK2C,MAAM6I,OAIdvL,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,YACXL,EAAAvB,EAAAwB,cAAC2B,EAAA,EAAD,CAAQC,QAAQ,UAAhB,kEALmB7B,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,WAAWyB,QAAS,kBAAMoK,EAAKc,OAAO,KACxEhN,EAAAvB,EAAAwB,cAAC2B,EAAA,EAAD,CAAQC,QAAQ,UAAhB,kEAMD9B,KAAK2C,MAAM6I,OAIdvL,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,eACXL,EAAAvB,EAAAwB,cAAC2B,EAAA,EAAD,CAAQC,QAAQ,WAAhB,uEALmB7B,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,cAAcyB,QAAS,kBAAMoK,EAAKc,OAAO,KAC3EhN,EAAAvB,EAAAwB,cAAC2B,EAAA,EAAD,CAAQC,QAAQ,WAAhB,0EAShB7B,EAAAvB,EAAAwB,cAACS,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGwE,GAAI,MAK/BpF,EAAAvB,EAAAwB,cAxIc,WACd,OAAOuI,WAAW,WACd,IAAuB,IAApBtK,EACD,OACE8B,EAAAvB,EAAAwB,cAACuD,EAAA,EAAD,CAAUC,GAAI,CACZwJ,SAAU,IACVvK,MAAO,CAAEwK,KAAMhB,EAAKnK,MAAMoL,cAIjC,MA8HH,aAhNQhL,aCHd8G,uBAEF,SAAAA,EAAYlH,GAAO,IAAAjD,EAAA,OAAAsE,OAAAiC,EAAA,EAAAjC,CAAArD,KAAAkJ,IACfnK,EAAAsE,OAAAkC,EAAA,EAAAlC,CAAArD,KAAAqD,OAAAmC,EAAA,EAAAnC,CAAA6F,GAAAzD,KAAAzF,KAAMgC,KAEDW,MAAQ,CAAEC,UAAU,GAHV7D,mFAOfiB,KAAKgC,MAAMmB,MAAMjE,aAAac,KAAKgC,MAAMiB,QAAQe,IAAI,SACrDhE,KAAKoD,SAAS,CAAER,SAAU5C,KAAK7B,mDAG1B,IAEGA,EAAoB6B,KAAKgC,MAAMmB,MAA/BhF,gBAER,OAA2B,IAAxB6B,KAAK2C,MAAMC,SACH3C,EAAAvB,EAAAwB,cAACuD,EAAA,EAAD,CAAUC,GAAI,CACjBwJ,SAAU,IACVvK,MAAO,CAAEwK,KAAMnN,KAAKgC,MAAMoL,cAIP,IAApBjP,EACH8B,EAAAvB,EAAAwB,cAAA,OAAKI,UAAU,mBAAf,0BAGAL,EAAAvB,EAAAwB,cAAA,gCA5BQkC,cAgCL0B,eAAYoF,ICrBZA,oLAVP,OACIjJ,EAAAvB,EAAAwB,cAAA,WACID,EAAAvB,EAAAwB,cAACmN,EAAD,CAAQlK,MAAOnD,KAAKgC,MAAMmB,QACzBnD,KAAKgC,MAAMsL,SACZrN,EAAAvB,EAAAwB,cAACqN,EAAD,cANInL,wDCQLoL,oLARP,OACIvN,EAAAvB,EAAAwB,cAAA,0BAHOkC,uBCAJqL,GAAA,SAACrM,EAAM5C,GAClB,GAAI4C,IAASsM,KAAY,KACbtF,EAAuB5J,EAAvB4J,SAAUtF,EAAatE,EAAbsE,SACF,IAAI6K,QAAQ,oCAAqC,CAC7D/P,OAAQ,OACRgQ,KAAMjF,KAAKC,UAAU,CAAER,WAAUtF,aACjC+K,QAAS,IAAIC,QAAQ,CAAEC,eAAgB,uBAYvCC,aAAaC,QAAQ,QAAS,QAEtC,OAAOC,QAAQC,WCVJC,oLARP,OACInO,EAAAvB,EAAAwB,cAAA,2BAHQkC,aC2BL8G,oLAnBP,IAQMmF,EAAeC,aAAmB,uCARrB,SAACC,GAAsB,IAAjBC,EAAiBC,UAAAxG,OAAA,QAAAyG,IAAAD,UAAA,GAAAA,UAAA,GAAP,GAC1BD,EAAQX,UACTW,EAAQX,QAAU,IAAIC,QAAQ,CAAEjQ,OAAQ,sBAE5C,IAAMuB,EAAQ4O,aAAaW,QAAQ,SAEnC,OADAH,EAAQX,QAAQ3K,IAAI,gBAApB,UAAA0L,OAA+CxP,IACxCyP,KAAWC,UAAUP,EAAKC,KAIrC,OACIvO,EAAAvB,EAAAwB,cAAC6O,GAAA,EAAD,CAAOC,aAAcA,GAAcX,aAAcA,GAC7CpO,EAAAvB,EAAAwB,cAAC+O,GAAA,EAAD,CAAUzM,KAAK,QAAQ0M,KAAM1B,KAC7BvN,EAAAvB,EAAAwB,cAAC+O,GAAA,EAAD,CAAUzM,KAAK,QAAQ0M,KAAMd,aAhBzBhM,aCade,GAAQ,IAAIjF,EACZiR,GAAa,IAAIC,EAEjBC,gMAGFlM,GAAMjE,aAAac,KAAKgC,MAAMiB,QAAQe,IAAI,0CAK1C,IAAMsL,EAAW,SAAAxG,GAAA,IAAc1G,EAAd0G,EAAGyG,UAA8BC,EAAjC1G,EAAyB2G,OAAmBC,EAA5CrM,OAAAsM,EAAA,EAAAtM,CAAAyF,EAAA,+BACf7I,EAAAvB,EAAAwB,cAACuD,EAAA,EAADJ,OAAA4I,OAAA,GAAWyD,EAAX,CAAiB7G,OAAQ,SAAA7G,GAAK,OAC5B/B,EAAAvB,EAAAwB,cAACsP,EAAD,CAAQrM,MAAOA,IACblD,EAAAvB,EAAAwB,cAACkC,EAAcJ,SAKf4N,EAAe,SAAAC,GAAA,IAAczN,EAAdyN,EAAGN,UAA8BC,EAAjCK,EAAyBJ,OAAmBC,EAA5CrM,OAAAsM,EAAA,EAAAtM,CAAAwM,EAAA,+BACnB5P,EAAAvB,EAAAwB,cAACuD,EAAA,EAADJ,OAAA4I,OAAA,GAAWyD,EAAX,CAAiB7G,OAAQ,SAAC7G,GAAD,OACG,IAA1BmB,GAAMhF,gBACF8B,EAAAvB,EAAAwB,cAACsP,EAAD,CAAQrM,MAAOA,IAAOlD,EAAAvB,EAAAwB,cAACkC,EAAcJ,IACrC/B,EAAAvB,EAAAwB,cAACuD,EAAA,EAAD,CAAUC,GAAG,gBAIrB,OACEzD,EAAAvB,EAAAwB,cAAC4E,EAAA,EAAD,KACE7E,EAAAvB,EAAAwB,cAAC4E,EAAA,EAAD,CAAQgL,SAAU,KACR7P,EAAAvB,EAAAwB,cAACoP,EAAD,CAAUS,KAAK,SAASN,OAAQD,GAAQD,UAAW,kBAAMtP,EAAAvB,EAAAwB,cAAC8P,EAAD,CAAO7M,MAAOA,QACvElD,EAAAvB,EAAAwB,cAACoP,EAAD,CAAUS,KAAK,YAAYN,OAAQD,GAAQD,UAAW,kBAAMtP,EAAAvB,EAAAwB,cAAC+P,GAAD,CAAU9M,MAAOA,QAC7ElD,EAAAvB,EAAAwB,cAACoP,EAAD,CAAUY,OAAK,EAACH,KAAK,IAAIN,OAAQD,GAAQD,UAAW,kBAAMtP,EAAAvB,EAAAwB,cAACiQ,EAAD,CAAUhN,MAAOA,QAC3ElD,EAAAvB,EAAAwB,cAAC0P,EAAD,CAAcG,KAAK,WAAWN,OAAQD,GAAQD,UAAW,kBAAMtP,EAAAvB,EAAAwB,cAACkQ,EAAD,CAASjN,MAAOA,QAC/ElD,EAAAvB,EAAAwB,cAAC0P,EAAD,CAAcG,KAAK,MAAMN,OAAQD,GAAQD,UAAW,kBAAMtP,EAAAvB,EAAAwB,cAACkQ,EAAD,CAASjN,MAAOA,QAC1ElD,EAAAvB,EAAAwB,cAAC0P,EAAD,CAAcG,KAAK,SAASN,OAAQD,GAAQD,UAAW,kBAAMtP,EAAAvB,EAAAwB,cAACmQ,GAAD,CAAOlN,MAAOA,QAC3ElD,EAAAvB,EAAAwB,cAAC0P,EAAD,CAAcG,KAAK,OAAON,OAAQD,GAAQD,UAAW,kBAAMtP,EAAAvB,EAAAwB,cAACoQ,EAAD,CAAmBnN,MAAOgM,QACrFlP,EAAAvB,EAAAwB,cAAC0P,EAAD,CAAcG,KAAK,WAAWN,OAAQD,GAAQD,UAAW,kBAAMtP,EAAAvB,EAAAwB,cAACqQ,EAAD,SAC/DtQ,EAAAvB,EAAAwB,cAAC0P,EAAD,CAAcG,KAAK,SAASN,OAAQe,GAAajB,UAAW,kBAAMtP,EAAAvB,EAAAwB,cAACuQ,GAAD,CAAOtN,MAAOA,iBAnChFhB,IAAMC,WA0CT0B,eAAYuL,oBC1D3BqB,IAAS7H,OACL5I,EAAAvB,EAAAwB,cAACyQ,GAAD,MACHC,SAASC,eAAe,mLCTzBC,EAAAC,QAAiBC,EAAAC,EAAuB,qGCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.ebb1d8f0.chunk.js","sourcesContent":["const api = \"http://10.34.34.85:8083/rpc\";\r\n\r\n/*\r\n* Materials:\r\n- https://medium.freecodecamp.org/login-using-react-redux-redux-saga-86b26c8180e\r\n- https://medium.com/technoetics/create-basic-login-forms-using-create-react-app-module-in-reactjs-511b9790dede\r\n- https://medium.com/the-many/adding-login-and-authentication-sections-to-your-react-or-react-native-app-7767fd251bd1\r\n- https://github.com/KilroggD/Todos-python/blob/master/client/src/services/ApiService.js\r\n*/\r\n\r\nconst formate = (method, params) => {\r\n    return {\"id\": 1, \"jsonrpc\": \"2.0\", \"method\": method, \"params\": params};\r\n}\r\n\r\nexport const checkSession = (token) => {\r\n    let payload = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify(formate('checkSession', token))\r\n    }\r\n\r\n    return fetch(api, payload)\r\n    .then(res => res.text())\r\n    .then((data) => data)\r\n}\r\n\r\nexport const login = (params) => {\r\n    let payload = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        // headers: this.buildHeaders(token),\r\n        body: JSON.stringify(formate('login', params))\r\n    }\r\n    console.log(JSON.stringify(formate('login', params)));\r\n    return fetch(api, payload)\r\n    .then(res => res.text())\r\n    .then((data) => data\r\n    );\r\n\r\n    // const res = await this.apiCall(api.login, 'POST', false, params);\r\n    //     this.handleCommonError(res);\r\n    //     return res.body;\r\n}\r\n\r\n// https://github.com/KilroggD/Todos-python/blob/master/client/src/services/ApiService.js\r\n// async login(params) { //login\r\n//     const res = await this.apiCall(api.login, 'POST', false, params);\r\n//     this.handleCommonError(res);\r\n//     return res.body;\r\n// }\r\n\r\nexport const getProfile = (userId) => {\r\n    console.log(\"CitizenAPI:getProfile\");\r\n    let url = \"http://10.34.34.85:8083/main?sitizenid=\" + userId;\r\n\r\n    return fetch(url, { method: 'GET', 'Accept': 'application/json' })\r\n    .then(res => res.json())\r\n    .then((data) => data);\r\n\r\n    // var xmlHttp = new XMLHttpRequest();\r\n    // xmlHttp.onreadystatechange = function() { \r\n    //     if (xmlHttp.readyState == 4 && xmlHttp.status == 200)\r\n    //         console.log(xmlHttp); //.responseText);\r\n    // }\r\n    // xmlHttp.open(\"GET\", url, true); // true for asynchronous \r\n    // xmlHttp.send(null);\r\n}\r\n\r\n\r\n// export const current_user = () => {}","import { observable, action, decorate } from 'mobx';\r\nimport * as CitizenAPI from '../CitizenAPI';\r\n\r\nclass CitizenStore {\r\n    isAuthenticated = false;\r\n    citizen = {};\r\n    isLoading = false;\r\n\r\n    login = async (params) => {\r\n         /* await CitizenAPI.login(params).then(data => {\r\n             console.log(data);\r\n         }); */ \r\n\r\n         this.isAuthenticated = true;\r\n    }\r\n\r\n    logout = () => {\r\n        this.isAuthenticated = false;\r\n    }\r\n\r\n    checkSession = async (token) => {\r\n        /* CitizenAPI.checkSession(token).then(data => {\r\n            if(data) this.isAuthenticated = true;\r\n        }) */\r\n        token === 'true' ? this.isAuthenticated = true : void 0;\r\n    }\r\n\r\n    getProfile = async (userId) => {\r\n        console.log(\"getProfile\");\r\n        this.isLoading = true;\r\n        CitizenAPI.getProfile(userId);\r\n        await CitizenAPI.getProfile(userId).then(data => {\r\n            this.isLoading = false;\r\n            this.citizen = data\r\n        });\r\n    }\r\n\r\n}\r\n\r\ndecorate(CitizenStore, {\r\n    isAuthenticated: observable,\r\n    login: action,\r\n    getProfile: action,\r\n    checkSession: action\r\n})\r\n\r\nexport default CitizenStore;","// import { observable, action, decorate, computed } from 'mobx';\r\n// import * as CitizenAPI from '../MeterAPI';\r\n\r\nclass CitizenStore {}\r\n\r\nexport default CitizenStore;","import React, { Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n// import { observer } from 'mobx-react';\r\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Col, Button, Container } from 'react-bootstrap';\r\nimport './style.css';\r\n\r\nclass MeterMeasurements extends React.Component {\r\n    // Страница показаний счетчика с кнопкой Оплатить (Открывается через меню ЖКХ)\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    onHandlePayment = (e) => {}\r\n\r\n    render() {\r\n        var payments = [{\r\n            meter: \"10200033\",\r\n            type: \"Холодная вода\",\r\n            tarif: \"Всего к оплате: 5458.56 руб.\",\r\n            start_measure: \"53,840 куб. м.\",\r\n            final_measure: \"56,840 куб. м.\",\r\n            expenses: \"3,000 куб.м.\",\r\n            sum: \"90,5 p\"\r\n        }, {\r\n            meter: \"25000007\",\r\n            type: \"Холодная вода\",\r\n            tarif: \"Всего к оплате: 5458.56 руб.\",\r\n            start_measure: \"53,840 куб. м.\",\r\n            final_measure: \"56,840 куб. м.\",\r\n            expenses: \"3,000 куб.м.\",\r\n            sum: \"290,37 p\"\r\n        }, {\r\n            meter: \"33300055\",\r\n            type: \"Электроэнергия\",\r\n            tarif: \"День (10р/кВтМ)\",\r\n            start_measure: \"53,840 куб. м.\",\r\n            final_measure: \"56,840 куб. м.\",\r\n            expenses: \"\",\r\n            sum: \"147,30 p\"\r\n        }, {\r\n            meter: \"33300055\",\r\n            type: \"Электроэнергия\",\r\n            tarif: \"Ночь (5р/кВтМ)\",\r\n            start_measure: \"53,840 куб. м.\",\r\n            final_measure: \"56,840 куб. м.\",\r\n            expenses: \"\",\r\n            sum: \"\"\r\n        }];\r\n        return (\r\n            <Fragment>\r\n                <Container fluid className=\"mce-container\">\r\n                <h1>Расчитать оплату</h1>\r\n                <Form>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} xs={5} md={6}>\r\n                            <Form.Label>Начальная дата:</Form.Label>\r\n                            <Form.Control placeholder=\"01.05.2019\" />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} xs={5} md={6}>\r\n                            <Form.Label>Конечная дата:</Form.Label>\r\n                            <Form.Control placeholder=\"18.05.2019\" />\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                </Form>\r\n                <BootstrapTable striped data={payments} hover>\r\n                    <TableHeaderColumn isKey dataField='meter'>Счетчик</TableHeaderColumn>\r\n                    <TableHeaderColumn dataField='type'>Тип</TableHeaderColumn>\r\n                    <TableHeaderColumn dataField='tarif'>Тариф</TableHeaderColumn>\r\n                    <TableHeaderColumn dataField='start_measure'>Начальные показания</TableHeaderColumn>\r\n                    <TableHeaderColumn dataField='final_measure'>Конечные показания</TableHeaderColumn>\r\n                    <TableHeaderColumn dataField='expenses'>Расход за период</TableHeaderColumn>\r\n                    <TableHeaderColumn dataField='sum'>$</TableHeaderColumn>\r\n                </BootstrapTable>\r\n                <div>\r\n                    <p>Итого по счетчикам: 2458.56</p>\r\n                    <span>Прочие КУ: 3000</span>\r\n                    <span>Всего к оплате: 5458.56 руб.</span>\r\n                </div>\r\n                <Button variant=\"primary\" type=\"submit\" onClick={() => this.props.history.push('/payment')}>\r\n                    Оплатить\r\n                </Button>\r\n                </Container>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(MeterMeasurements);","import React, { Fragment } from 'react';\r\n// import { observer } from 'mobx-react';\r\nimport { Col, Button } from 'react-bootstrap';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nclass Payment extends React.Component {\r\n    // Страница формы оплаты ЖКХ\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Form>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Номер карты</Form.Label>\r\n                        <Form.Control name=\"login\" type=\"text\" placeholder=\"XXXX XXXX XXXX XXXX\" />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Имя Фамилия</Form.Label>\r\n                        <Form.Control name=\"password\" type=\"password\" placeholder=\"Password\" />\r\n                    </Form.Group>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} xs={5} md={6}>\r\n                            <Form.Label>Срок действия</Form.Label>\r\n                            <Form.Control name=\"password\" type=\"number\" placeholder=\"05\" md={1} />\r\n                            <Form.Control name=\"password\" type=\"number\" placeholder=\"2019\" md={2} />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} xs={2} md={4}>\r\n                            <Form.Label>CVV2/CVC2:</Form.Label>\r\n                            <Form.Control placeholder=\"321\" />\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Button variant=\"primary\" type=\"submit\" onClick={this.onHandleLogin}>\r\n                            Оплатить\r\n                        </Button>\r\n                    </Form.Row>\r\n                </Form>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Payment;","import React, { Fragment } from 'react';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport { observer } from 'mobx-react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport { withCookies } from 'react-cookie';\r\nimport Form from 'react-bootstrap/Form';\r\nimport './style.scss';\r\n\r\nclass Login extends React.Component {\r\n    // Tutorial: https://medium.freecodecamp.org/login-using-react-redux-redux-saga-86b26c8180e\r\n\r\n    state = {\r\n        redirect: false,\r\n        email: '',\r\n        password: ''\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    async componentWillReact() {\r\n        if(this.props.store.isAuthenticated) {\r\n            // await this.props.store.fetchProfile()\r\n            this.props.history.push('/')\r\n        }\r\n    }\r\n\r\n    changeValue(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onHandleLogin = (event) => {\r\n        event.preventDefault();\r\n        if(this.state.email === 'admin' && this.state.password === 'admin') {\r\n            this.props.cookies.set('auth', true);\r\n            this.props.store.login();\r\n            this.setState({ redirect: true });\r\n        }\r\n      //  this.props.store.login({ email: this.state.email, password: this.state.password });\r\n    }\r\n\r\n    render() {\r\n\r\n        if(this.state.redirect) { //isAuthenticated) {\r\n            return <Redirect to=\"/login\" />;\r\n        }\r\n        else {\r\n            return (\r\n                <Fragment>\r\n                    <Container className=\"login-container\">\r\n                        <Row>\r\n                            <Col className=\"login-block\">\r\n                                <h1>ВХОД</h1>\r\n                                <Form>\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                        <Form.Label>E-mail</Form.Label>\r\n                                        <Form.Control name=\"email\" type=\"email\" onChange={(e) => this.changeValue(e)} value={this.state.email} placeholder=\"Введите E-mail\" />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"formBasicPassword\">\r\n                                        <Form.Label>Пароль</Form.Label>\r\n                                        <Form.Control name=\"password\" type=\"password\" onChange={(e) => this.changeValue(e)} value={this.state.password} placeholder=\"Введите пароль\" />\r\n                                    </Form.Group>\r\n                                    <button className=\"btn-s btn_md btn-action btn-green\" variant=\"primary\" type=\"submit\" onClick={this.onHandleLogin}>\r\n                                        Войти\r\n                                    </button>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Fragment>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nLogin = observer(Login);\r\n\r\nexport default withCookies(withRouter(Login));","import React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport './style.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { Nav, Navbar, NavDropdown } from 'react-bootstrap';\r\nimport { withCookies } from 'react-cookie';\r\n\r\nclass Header extends React.Component {\r\n    // Шапка сайта\r\n\r\n    componentDidMount() {\r\n        // const userId = 1;\r\n        this.props.store.checkSession(this.props.cookies.get('auth'));\r\n        console.log('checked');\r\n        // this.props.store.getProfile(userId);\r\n    }\r\n\r\n    onEventLogout() {\r\n        this.props.store.logout();\r\n        this.props.cookies.remove('auth');\r\n    }\r\n\r\n    render() {\r\n      //  const { citizen, isLoading } = this.props.store;\r\n        const { isAuthenticated } = this.props.store;\r\n\r\n        return (\r\n                    <Navbar className=\"app-header\" expand=\"lg\">\r\n                        <Navbar.Brand className=\"mr-auto\" href=\"#home\"><img alt=\"logo\"  src={require('../../../images/Hypp150.jpg')} ></img></Navbar.Brand>\r\n                        <Navbar.Toggle><i className=\"fas fa-bars fx-2\"></i></Navbar.Toggle>\r\n                        <Navbar.Collapse id=\"basic-navbar-nav navbar-inverse\">\r\n                            <Nav className=\"mr-auto navbar-links\">\r\n                            <Nav.Item>\r\n                                <Link to=\"/\">Главная</Link>\r\n                            </Nav.Item>\r\n                                <Nav.Item>\r\n                                <Link to=\"/mce\">ЖКХ</Link>\r\n                                </Nav.Item>\r\n                                <Nav.Item>\r\n                                <Link to=\"/updates\">Объявления</Link>\r\n                                </Nav.Item>\r\n                                <Nav.Item>\r\n                                <Link to=\"/votes\">Голосование</Link>\r\n                                </Nav.Item>   \r\n                                <Nav.Item>\r\n                                <Link to=\"/contacts\">Контакты</Link>\r\n                                </Nav.Item>\r\n                            </Nav>\r\n                            { isAuthenticated === true ? \r\n                                <Nav>\r\n                                    <NavDropdown title=\"Аккаунт\" id=\"basic-nav-dropdown\">\r\n                                        <NavDropdown.Item href=\"/profile\">Профиль</NavDropdown.Item>\r\n                                        <NavDropdown.Item href=\"/settings\">Настройки</NavDropdown.Item>\r\n                                        <NavDropdown.Item href=\"/help\">Помощь</NavDropdown.Item>\r\n                                        <NavDropdown.Divider />\r\n                                        <NavDropdown.Item onClick={() => this.onEventLogout()}>Выйти</NavDropdown.Item>\r\n                                    </NavDropdown>\r\n                                </Nav>\r\n                                :\r\n                                <Nav>\r\n                                    <Nav.Item>\r\n                                        <Link to=\"/login\">Войти</Link>\r\n                                    </Nav.Item>\r\n                                    <Nav.Item>\r\n                                        <Link to=\"/register\">Регистрация</Link>\r\n                                    </Nav.Item>\r\n                                </Nav>\r\n                            }\r\n                        </Navbar.Collapse>\r\n                    </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\nHeader = observer(Header);\r\n\r\nexport default withCookies(Header);","import React, { Fragment } from 'react';\r\nimport './style.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { Container } from 'semantic-ui-react';\r\n\r\nclass Footer extends React.Component {\r\n    // футер\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Fragment>\r\n                        <div className=\"footer-container\">\r\n                                <Container className=\"mx-w-100\">\r\n                                    <Row className=\"footer-grid-top\">\r\n                                        <Col className=\"footer-company\" md={6} xs={12}><h2>Hyppnotic</h2>\r\n                                            <span>\r\n                                            example@gmail.com\r\n                                            </span>\r\n                                        </Col>\r\n                                        <Col className=\"footer-links\" lg={3} md={3} xs={6}><h4>О компании</h4>\r\n                                            <div className=\"footer-links-items\">\r\n                                                <Link to=\"#\">Адрес</Link>\r\n                                                <Link to=\"#\">Github</Link>\r\n                                                <Link to=\"#\">Facebook group</Link>\r\n                                                <Link to=\"#\">Связь по E-Mail</Link>\r\n                                            </div>\r\n                                        </Col>\r\n                                        <Col className=\"footer-links\" lg={3} md={3} xs={6}><h4>Ссылки</h4>\r\n                                            <div className=\"footer-links-items\">\r\n                                                <Link to=\"#\">ЖКХ</Link>\r\n                                                <Link to=\"#\">Объявления</Link>\r\n                                                <Link to=\"#\">Голосование</Link>\r\n                                                <Link to=\"#\">Контакты</Link>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Container>\r\n                            <Row className=\"footer-grid-bottom\">\r\n                                    <Col>\r\n                                        <p>Все права защищены @2019</p>\r\n                                    </Col>\r\n                            </Row>\r\n                        </div>\r\n            </Fragment>           \r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Fragment } from 'react';\r\n// import { observer } from 'mobx-react';\r\nimport { Col, Container, Row, Image } from 'react-bootstrap';\r\nimport { Divider, Grid, Segment, Table } from 'semantic-ui-react';\r\nimport './style.css';\r\n\r\nclass Payment extends React.Component {\r\n    // Страница формы оплаты ЖКХ\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            firstname: 'Иван',\r\n            lastname: 'Иванов',\r\n            patronymic: 'Иванович',\r\n            email: 'ivanivanov@gmail.com',\r\n            role: 'Собственник',\r\n            city: 'Екатеринбург',\r\n            building: 'Жилой дом',\r\n            entrance: 2,\r\n            stage: 3,\r\n            managementCompany: 'Упр. компания',\r\n            street: 'Светланская',\r\n            house: 123,\r\n            housing: 1,\r\n            apartment: 20\r\n         };\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Container fluid className=\"profile-container\">\r\n                    <Row>\r\n                        <Col xs={12} className=\"profile-background\"></Col>\r\n                        <Col xs={12}>\r\n                            <div className=\"profile-image-support\">\r\n                                <div className=\"profile-image\">\r\n                                    <div>\r\n                                        <Image src={require('../../../images/avatar.png')} fluid />\r\n                                    </div>\r\n                                    <p>{this.state.firstname} {this.state.lastname}</p>\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                        <Container>\r\n                            <Row>\r\n                                <Col className=\"profile-info-block\" md={12} xs={12}>\r\n                                            <Divider horizontal>Основная информация</Divider>\r\n                                            <div className=\"profile-info-item\">\r\n                                                <div className=\"profile-info-item-label\">Имя</div>\r\n                                                <div className=\"profile-info-item-text\">{ this.state.firstname }</div>\r\n                                            </div>\r\n                                            <div className=\"profile-info-item\">\r\n                                                <div className=\"profile-info-item-label\">Фамилия</div>\r\n                                                <div className=\"profile-info-item-text\">{ this.state.lastname }</div>\r\n                                            </div>\r\n                                            <div className=\"profile-info-item\">\r\n                                                <div className=\"profile-info-item-label\">E-mail</div>\r\n                                                <div className=\"profile-info-item-text\">{ this.state.email }</div>\r\n                                            </div>\r\n                                            <div className=\"profile-info-item\">\r\n                                                <div className=\"profile-info-item-label\">Роль</div>\r\n                                                <div className=\"profile-info-item-text\">{ this.state.role }</div>\r\n                                            </div>\r\n                                            <Divider horizontal>Здание</Divider>\r\n                                            <div className=\"profile-info-item\">\r\n                                                <div className=\"profile-info-item-label\">Город</div>\r\n                                                <div className=\"profile-info-item-text\">{ this.state.city }</div>\r\n                                            </div>\r\n                                            <div className=\"profile-info-item\">\r\n                                                <div className=\"profile-info-item-label\">Улица</div>\r\n                                                <div className=\"profile-info-item-text\">{ this.state.street }</div>\r\n                                            </div>\r\n                                            <div className=\"profile-info-item\">\r\n                                                <div className=\"profile-info-item-label\">Дом</div>\r\n                                                <div className=\"profile-info-item-text\">{ this.state.house }</div>\r\n                                            </div>\r\n                                            <div className=\"profile-info-item\">\r\n                                                <div className=\"profile-info-item-label\">Корпус</div>\r\n                                                <div className=\"profile-info-item-text\">{ this.state.housing }</div>\r\n                                            </div>\r\n                                            <div className=\"profile-info-item\">\r\n                                                <div className=\"profile-info-item-label\">Квартира</div>\r\n                                                <div className=\"profile-info-item-text\">{ this.state.apartment }</div>\r\n                                            </div>\r\n                                            <div className=\"profile-info-item\">\r\n                                                <div className=\"profile-info-item-label\">Тип задния</div>\r\n                                                <div className=\"profile-info-item-text\">{ this.state.building }</div>\r\n                                            </div>\r\n                                            <Divider horizontal>Добровольная информация</Divider>\r\n                                            <div className=\"profile-info-item\">\r\n                                                <div className=\"profile-info-item-label\">Отчество</div>\r\n                                                <div className=\"profile-info-item-text\">{ this.state.patronymic }</div>\r\n                                            </div>\r\n                                            <div className=\"profile-info-item\">\r\n                                                <div className=\"profile-info-item-label\">Управляющая компания</div>\r\n                                                <div className=\"profile-info-item-text\">{ this.state.managementCompany }</div>\r\n                                            </div>\r\n                                            <div className=\"profile-info-item\">\r\n                                                <div className=\"profile-info-item-label\">Подьезд</div>\r\n                                                <div className=\"profile-info-item-text\">{ this.state.entrance }</div>\r\n                                            </div>\r\n                                            <div className=\"profile-info-item\">\r\n                                                <div className=\"profile-info-item-label\">Этаж</div>\r\n                                                <div className=\"profile-info-item-text\">{ this.state.stage }</div>\r\n                                            </div>\r\n                                </Col>\r\n                            </Row>   \r\n                        </Container>\r\n                    </Row>\r\n                </Container>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Payment;","import React, { Fragment } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nclass About extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Container fluid className=\"about-container\">\r\n                    <Row>\r\n                        <Container className=\"about-container-inside\">\r\n                            <Row>\r\n                                <Col xs={12}>\r\n                                    <h1>Будьте всегда на связи с нами</h1>\r\n                                    <p>Вы всегда можете связаться с нами в соц. сетях. Пишите свои предложения по поводу нашей работы нам в VK. Вы также можете связаться с нами по любому возникнувшему вопросу. Мы стараемся ответить каждому.</p>\r\n                                </Col>\r\n                                <Col xs={12} className=\"social-icons\">\r\n                                    <a href=\"https://github.com\"><i class=\"fab fa-vk\"></i></a>\r\n                                    <a href=\"https://github.com\"><i class=\"fab fa-telegram-plane\"></i></a>\r\n                                    <a href=\"https://github.com\"><i class=\"fab fa-facebook-f\"></i></a>\r\n                                    <a href=\"https://github.com\"><i class=\"fab fa-whatsapp\"></i></a>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Row>\r\n                </Container>    \r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","import React, { Fragment } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nclass Choice extends React.Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Fragment>\r\n                    <Container className=\"main-features-block\">\r\n                        <Row>\r\n                            <Col xs={12} className=\"main-features\"><h1>Почему выбирают нас</h1></Col>\r\n                            <Col className=\"main-features-group\" xs={12} md={4}>\r\n                                <div className=\"features-item\">\r\n                                    <div className=\"icon-circle\">\r\n                                        <span>\r\n                                            <i class=\"far fa-thumbs-up\"></i>\r\n                                        </span>\r\n                                    </div>\r\n                                    <h3>Качественно</h3>\r\n                                    <p>Опытные,образованные сотрудники залог хорошего бизнеса</p>     \r\n                                </div>\r\n                            </Col>    \r\n                            <Col className=\"main-features-group\" xs={12} md={4}>    \r\n                                <div className=\"features-item\">\r\n                                    <div className=\"icon-circle\">\r\n                                        <span>\r\n                                            <i class=\"far fa-building\"></i>\r\n                                        </span>\r\n                                    </div>    \r\n                                    <h3>Удобно</h3>\r\n                                    <p>Коплексное обслуживание домов и сооружений</p>     \r\n                                </div>\r\n                            </Col>   \r\n                            <Col className=\"main-features-group\" xs={12} md={4}>    \r\n                                <div className=\"features-item\">\r\n                                    <div className=\"icon-circle\">\r\n                                        <span><i class=\"fas fa-hand-holding-usd\"></i></span>\r\n                                    </div>    \r\n                                    <h3>Доступно</h3>\r\n                                    <p>Демократичные цены без лишних надбавок</p>     \r\n                                </div>                           \r\n                            </Col>\r\n                        </Row>    \r\n                    </Container>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Choice;","import React, { Fragment } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport ScrollReveal from 'scrollreveal';\r\n\r\nclass Using extends React.Component {\r\n\r\n    componentDidMount() {\r\n        ScrollReveal().reveal('.features-item', { scale: 0.85 });\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Fragment>\r\n                    <Container className=\"using-container\">\r\n                        <Row>\r\n                            <Col xs={12}>\r\n                                <h2>САМЫЙ ЛЕГКИЙ ПУТЬ К СОТРУДНИЧЕСТВУ</h2>\r\n                                <p>мы не усложняем, а упрощаем оказание услуг</p>\r\n                            </Col>\r\n                            <Col className=\"using-item\" xs={12} md={4}><div><i class=\"fas fa-clipboard-list\"></i></div>Вы выбираете услуги</Col>\r\n                            <Col className=\"using-item\" xs={12} md={4}><div><i class=\"fas fa-pencil-alt\"></i></div>Заключаем договор</Col>\r\n                            <Col className=\"using-item\" xs={12} md={4}><div><i class=\"fas fa-rocket\"></i></div>Выполняем услуги</Col>\r\n                        </Row>\r\n                    </Container>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Using;","import React, { Fragment } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport './style.scss';  \r\nimport { Container, Row } from 'react-bootstrap';\r\nimport About from './about';\r\nimport Choice from './choice';\r\nimport ScrollReveal from 'scrollreveal';\r\nimport Using from './using';\r\n\r\nclass MainPage extends React.Component {\r\n    // Главная страница\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            navigate: false\r\n         }\r\n    }\r\n\r\n    componentDidMount() {\r\n        ScrollReveal().reveal('.container-wrapper', { scale: 0.8 });\r\n        ScrollReveal().reveal('.features-item');\r\n        ScrollReveal().sync();\r\n        // const userId = 1;\r\n        // this.props.store.getProfile(userId);\r\n    }\r\n\r\n    redirectTo() {\r\n        this.setState({ navigate: true });\r\n    }\r\n\r\n    render() {\r\n\r\n        if(this.state.navigate && this.props.store.isAuthenticated) {\r\n            return <Redirect to='/profile' />;\r\n        }\r\n\r\n        if(this.state.navigate && !this.props.store.isAuthenticated) {\r\n            return <Redirect to='/login' />;\r\n        }\r\n\r\n        return (\r\n            <Fragment>\r\n                <Container fluid className=\"container-wrapper\">\r\n                    <Row>\r\n                    <Container fluid className=\"main-container\">\r\n                        <Row>\r\n                            <Container>\r\n                                <Row>\r\n                                    <div className=\"main-banner\">\r\n                                        <h1>Лучший сервис по обслуживанию жилых домов и комплексов</h1>\r\n                                        <button className=\"btn-s btn-action btn_lg btn-green\" onClick={() => this.redirectTo()}>Попробовать</button>\r\n                                    </div>\r\n                                </Row>\r\n                            </Container>\r\n                        </Row>\r\n                    </Container>\r\n                    <Choice />\r\n                    <About />\r\n                    <Using />\r\n                    </Row>\r\n                </Container>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainPage;","import * as Yup from \"yup\";\r\n\r\nconst RegisterForm = Yup.object().shape({\r\n  email: Yup.string()\r\n    //Проверяем, корректный ли адрес.\r\n    //Если нет, то выводится сообщение в скобках\r\n    .email(\"Invalid email address\")\r\n    //не сабмитим, если поле не заполнено\r\n    .required(\"Required\"),\r\n  password: Yup.string()\r\n    .min(8, \"Must be longer than 8 characters\")\r\n    .required(\"Required\")\r\n});\r\nexport default RegisterForm;","import React, { Fragment } from 'react';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport { observer } from 'mobx-react';\r\nimport { Row, Col, Button, Container } from 'react-bootstrap';\r\nimport { Formik, Field } from \"formik\";\r\nimport { withCookies } from 'react-cookie';\r\nimport Form from 'react-bootstrap/Form';\r\nimport './style.css';\r\nimport registerForm from '../../../schemes/registerForm';\r\n\r\nclass Register extends React.Component {\r\n    // Tutorial: https://medium.freecodecamp.org/login-using-react-redux-redux-saga-86b26c8180e\r\n\r\n    state = {\r\n        redirect: false,\r\n        firstname: '',\r\n        lastname: '',\r\n        email: '',\r\n        date: '',\r\n        password: '',\r\n        re_password: '',\r\n        errors: []\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    async componentWillReact() {\r\n        if(this.props.store.isAuthenticated) {\r\n            // await this.props.store.fetchProfile()\r\n            this.props.history.push('/')\r\n        }\r\n    }\r\n\r\n    changeValue(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onHandleRegister = (event) => {\r\n        event.preventDefault();\r\n        if(this.state.email === 'admin' && this.state.password === 'admin') {\r\n            this.props.cookies.set('auth', true);\r\n            this.props.store.login();\r\n            this.setState({ redirect: true });\r\n        }\r\n      //  this.props.store.login({ email: this.state.email, password: this.state.password });\r\n    }\r\n\r\n    render() {\r\n\r\n        if(this.state.redirect) { //isAuthenticated) {\r\n            return <Redirect to=\"/login\" />;\r\n        }\r\n        else {\r\n            return (\r\n                <Fragment>\r\n                    <Container className=\"register-container\">\r\n                        <Row>\r\n                            <Col className=\"register-block\">\r\n                                <h1>Регистрация</h1>\r\n                                { this.state.errors.length > 0 ?\r\n                                    <div className=\"errors-block\">\r\n                                        <h4>Ошибки</h4>\r\n                                        <ul>\r\n                                            <li>Ошибки</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    : null\r\n                                    }\r\n                                    <Formik\r\n                                    //инициализируем значения input-ов\r\n                                    initialValues={{\r\n                                        email: \"\",\r\n                                        username: \"\",\r\n                                        password: \"\",\r\n                                        re_password: \"\",\r\n                                        firstname: \"\",\r\n                                        lastname: \"\",\r\n                                        date: \"\"\r\n                                    }}\r\n                                    //подключаем схему валидации, которую описали выше\r\n                                    validationSchema={registerForm}\r\n                                    //определяем, что будет происходить при вызове onsubmit\r\n                                    onSubmit={values => {\r\n                                        setTimeout(() => {\r\n                                        alert(JSON.stringify(values, null, 2));\r\n                                        }, 500);\r\n                                    }}\r\n                                    //свойство, где описывыем нашу форму\r\n                                    //errors-ошибки валидации формы\r\n                                    //touched-поля формы, которые мы \"затронули\",\r\n                                    //то есть, в которых что-то ввели\r\n                                    render={({ errors, touched }) => (\r\n                                        <Form className=\"form-container\">\r\n                                        <Form.Row>\r\n                                            <Form.Group as={Col}>\r\n                                                <Form.Label>Имя</Form.Label>\r\n                                                <Field name=\"firstname\" className=\"form-control\" type=\"text\" />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group as={Col}>\r\n                                                <Form.Label>Фамилия</Form.Label>\r\n                                                <Field name=\"lastname\" className=\"form-control\" type=\"text\" />\r\n                                            </Form.Group>\r\n                                        </Form.Row>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>Электронный адрес</Form.Label>\r\n                                        <Field name=\"email\" className=\"form-control\" type=\"email\" placeholder=\"1234 Main St\" />\r\n                                        { errors.email && (<div>{errors.email}</div>)}\r\n                                    </Form.Group>    \r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>Дата рождения</Form.Label>\r\n                                        <Field name=\"birthday\" className=\"form-control\" type=\"date\" placeholder=\"1234 Main St\" />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"formGridAddress1\">\r\n                                        <Form.Label>Пароль</Form.Label>\r\n                                        <Field name=\"password\" type=\"password\" className=\"form-control\" placeholder=\"1234 Main St\" />\r\n                                        { errors.password && (<div>{errors.password}</div>)}\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"formGridAddress2\">\r\n                                        <Form.Label>Повторите пароль</Form.Label>\r\n                                        <Field name=\"re_password\" type=\"password\" className=\"form-control\" placeholder=\"Apartment, studio, or floor\" />\r\n                                    </Form.Group>\r\n                                    <Form.Group id=\"formGridCheckbox\">\r\n                                        <Form.Check>\r\n                                            <Form.Check.Input type='checkbox' />\r\n                                            <Form.Check.Label>Я согласен с <a href=\"/rules\">правилами</a> нашего сайта.</Form.Check.Label>\r\n                                        </Form.Check>\r\n                                    </Form.Group>\r\n\r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                        Submit\r\n                                    </Button>\r\n                                    </Form>\r\n                                    )}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Fragment>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nRegister = observer(Register);\r\n\r\nexport default withCookies(withRouter(Register));","import React, { Component } from 'react'\r\nimport './style.scss';\r\n\r\nclass index extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = { time: {}, seconds: this.props.seconds };\r\n    this.timer = 0;\r\n    this.startTimer = this.startTimer.bind(this);\r\n    this.countDown = this.countDown.bind(this);\r\n  }\r\n\r\n  secondsToTime(secs){\r\n    let hours = Math.floor(secs / (60 * 60));\r\n\r\n    let divisor_for_minutes = secs % (60 * 60);\r\n    let minutes = Math.floor(divisor_for_minutes / 60);\r\n\r\n    let divisor_for_seconds = divisor_for_minutes % 60;\r\n    let seconds = Math.ceil(divisor_for_seconds);\r\n\r\n    let obj = {\r\n      \"h\": hours,\r\n      \"m\": minutes,\r\n      \"s\": seconds\r\n    };\r\n    return obj;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.startTimer();\r\n    let timeLeftVar = this.secondsToTime(this.state.seconds);\r\n    this.setState({ time: timeLeftVar });\r\n  }\r\n\r\n  startTimer() {\r\n    // eslint-disable-next-line\r\n    if (this.timer == 0 && this.state.seconds > 0) {\r\n      this.timer = setInterval(this.countDown, 1000);\r\n    }\r\n  }\r\n\r\n  countDown() {\r\n    // Remove one second, set state so a re-render happens.\r\n    let seconds = this.state.seconds - 1;\r\n    this.setState({\r\n      time: this.secondsToTime(seconds),\r\n      seconds: seconds,\r\n    });\r\n    \r\n    // Check if we're at zero.\r\n    // eslint-disable-next-line\r\n    if (seconds == 0) { \r\n      clearInterval(this.timer);\r\n    }\r\n  }\r\n\r\n    render() {\r\n        return (\r\n            <div>{this.state.time.h} : {this.state.time.m} : {this.state.time.s}</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default index;\r\n","import React, {Component} from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { Table } from 'semantic-ui-react'\r\n\r\nclass index extends Component {\r\n    render() {\r\n        return (\r\n            <div className={this.props.show === true ? \"votes-people show\" : \"votes-people\"}>\r\n                <div className=\"votes-people-bg\" onClick={() => this.props.changeShow()}></div>\r\n                <div className=\"votes-people-group-block\">\r\n                        <p>Голоса</p>\r\n                        <div className=\"divider\"></div>\r\n                        <div className=\"votes-people-group\">\r\n                        <Table unstackable>\r\n                            <Table.Header>\r\n                            <Table.Row>\r\n                                <Table.HeaderCell>Собственник</Table.HeaderCell>\r\n                                <Table.HeaderCell>Статус</Table.HeaderCell>\r\n                            </Table.Row>\r\n                            </Table.Header>\r\n                            <Table.Body>\r\n                            { this.props.votes.map((item) => (\r\n                                <Table.Row>\r\n                                    <Table.Cell>{ item.initials }</Table.Cell>\r\n                                    <Table.Cell>{ \r\n                                        item.vote === 'Да' \r\n                                        ? <span className=\"green\">Согласен</span> \r\n                                        : item.vote === 'Нет' \r\n                                        ? <span className=\"red\">Не согласен</span> \r\n                                        : <span className=\"green\">Воздержался</span>}</Table.Cell>\r\n                                </Table.Row>)) \r\n                            }\r\n                            </Table.Body>\r\n                        </Table>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default index;","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Col, Row, Container, Table, Spinner, Button } from 'react-bootstrap';\r\nimport './style.scss';\r\nimport { Player } from 'video-react';\r\nimport Timer from './timer';\r\nimport VotesPeople from './votesPeople';\r\n\r\nclass index extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            questions: [{}],\r\n            vote: { \r\n                for: 60, \r\n                against: 23, \r\n                notVoted: 25 }, \r\n            currentQuestion: 0, \r\n            effect: false, \r\n            watch: 0, \r\n            done: false, \r\n            showVotes: false,\r\n            votes: [\r\n                { initials: \"Иван Иванов\", vote: 'Да' },\r\n                { initials: \"Иван Иванов\", vote: 'Да' },\r\n                { initials: \"Иван Иванов\", vote: 'Нет' },\r\n                { initials: \"Иван Иванов\", vote: 'Да' },\r\n                { initials: \"Иван Иванов\", vote: 'Да' },\r\n                { initials: \"Иван Иванов\", vote: 'Воздержался' },\r\n                { initials: \"Иван Иванов\", vote: 'Да' },\r\n                { initials: \"Иван Иванов\", vote: 'Да' },\r\n                { initials: \"Иван Иванов\", vote: 'Нет' },\r\n                { initials: \"Иван Иванов\", vote: 'Да' }, \r\n                { initials: \"Иван Иванов\", vote: 'Нет' },\r\n                { initials: \"Иван Иванов\", vote: 'Да' }] \r\n            };\r\n            this.changeShow = this.changeShow.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ questions: [\r\n            { text: 'Принятние решение по замене труб в подвале', video: 'http://www.808.dk/vstreamer.asp?video=gizmo.mp4', completed: false, answer: null },\r\n            { text: 'Принятние решение по замене труб в подвале 2 Принятние решение по замене труб в подвале 2', video: 'https://media.w3.org/2010/05/sintel/trailer_hd.mp4', completed: false, answer: null },\r\n            { text: 'Принятние решение по замене труб в подвале 3', completed: false, answer: null },\r\n            { text: 'Принятние решение по замене труб в подвале 4', completed: false, answer: null },\r\n            { text: 'Принятние решение по замене труб в подвале 5', completed: false, answer: null },\r\n            { text: 'Принятние решение по замене труб в подвале 6', completed: false, answer: null }]\r\n        });\r\n    }\r\n\r\n    doVote( arg ) {\r\n        this.setState({ \r\n            effect: this.state.currentQuestion < this.state.questions.length - 1 ? true : void 0,\r\n            currentQuestion: this.state.currentQuestion + 1 > this.state.questions.length - 1 ? \r\n            this.state.currentQuestion : \r\n            this.state.currentQuestion + 1, questions: Object.assign(this.state.questions, { [this.state.currentQuestion]: { ...this.state.questions[this.state.currentQuestion],\r\n                completed: true, answer: arg\r\n            }})  });\r\n        setTimeout(() => {\r\n            this.setState({ effect: false });\r\n        }, 1000);    \r\n\r\n        if(this.state.questions[this.state.questions.length - 2].completed === true) {\r\n            this.setState({ done: true }); \r\n         }\r\n    }\r\n\r\n    hoverWatch( arg ) {\r\n        this.setState({ watch: arg });\r\n    }\r\n\r\n    changeShow() {\r\n        this.setState(prev => ({ showVotes: !prev.showVotes }));\r\n    }\r\n\r\n    render() {\r\n\r\n        const { isAuthenticated } = this.props.store;\r\n\r\n        const IsLoading = () => {\r\n            return setTimeout(() => {\r\n                if(isAuthenticated !== true) {\r\n                  return(\r\n                    <Redirect to={{\r\n                      pathname: '/',\r\n                      state: { from: this.props.location }\r\n                    }}/>\r\n                  )\r\n                }\r\n            }, 1000);\r\n        }\r\n\r\n        const Spin = () => {\r\n            return(<div className=\"spinner-support\"><Spinner animation=\"grow\" variant=\"primary\" /></div>)\r\n        }\r\n\r\n        return isAuthenticated ? (\r\n            <Container fluid className=\"votes-container\">\r\n                <Row>\r\n                    <Col lg={3} md={12} xs={12} className=\"block-offset\">\r\n                        <div className=\"votes-table-block\">\r\n                            <h1>Голоса</h1>\r\n                            <div className=\"votes-table\">\r\n                            <Table bordered hover>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>Количество собственников</td>\r\n                                        <td>{ this.state.vote.for + this.state.vote.against + this.state.vote.notVoted } чел.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Согласны</td>\r\n                                        <td>{ this.state.vote.for } чел.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Несогласны</td>\r\n                                        <td>{ this.state.vote.against } чел.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Необходимо голосов</td>\r\n                                        <td>{ Math.floor((this.state.vote.for + this.state.vote.against + this.state.vote.notVoted) / 2) } гол.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Осталось набрать голосов до кворума</td>\r\n                                        <td>{ this.state.vote.notVoted } гол.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </Table>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={6} xs={12} md={12} className=\"votes-video block-offset\">\r\n                        <Player\r\n                        playsInline\r\n                        poster=\"/assets/poster.png\"\r\n                        src={this.state.questions[this.state.currentQuestion].video}/>\r\n                    </Col>\r\n                    <Col lg={3} xs={12} md={12} className=\"block-offset\">\r\n                            <h2>Осталось времени: <Timer seconds={86400} /></h2>\r\n                            <div className=\"votes-group\">\r\n                                <div \r\n                                    className=\"votes-item\" \r\n                                    onMouseEnter={() => this.hoverWatch(1)} \r\n                                    onMouseLeave={() => this.hoverWatch(0)}>\r\n                                    <div className={this.state.watch === 1 ? \"votes-watch show\" : \"votes-watch\"}>\r\n                                        <i className=\"fa fa-eye\" aria-hidden=\"true\"></i>\r\n                                    </div>\r\n                                    <p>Протокол</p>\r\n                                </div>\r\n                                <div \r\n                                    className=\"votes-item\" \r\n                                    onMouseEnter={() => this.hoverWatch(2)} \r\n                                    onMouseLeave={() => this.hoverWatch(0)} \r\n                                    onClick={() => this.changeShow()}>\r\n                                    <div className={this.state.watch === 2 ? \"votes-watch show\" : \"votes-watch\"}>\r\n                                        <i className=\"fa fa-eye\" aria-hidden=\"true\"></i>\r\n                                    </div>\r\n                                    <p>Лист голосов</p>\r\n                                </div>\r\n                            </div>\r\n                    </Col>\r\n                    <VotesPeople votes={this.state.votes} show={this.state.showVotes} changeShow={this.changeShow}/>\r\n                </Row>\r\n                <Row className=\"vote-action\">\r\n                    <Col xs={6} md={6} lg={3}>\r\n\r\n                    </Col>\r\n                    <Col xs={12} md={12} lg={6} className=\"questions\">\r\n                        <div className=\"vote-quest\">\r\n                            {this.state.effect ? <div className=\"spinner\"><Spin /></div> : null }\r\n                            <div className={ this.state.effect ? \"vote-title noOverflow\" : \"vote-title\" }>\r\n                                <p>{this.state.currentQuestion + 1}</p>\r\n                                <span><h6>{ this.state.questions[this.state.currentQuestion].text } </h6></span>\r\n                            </div>\r\n                            <div className=\"divider\"></div>\r\n                            <div className={ this.state.effect ? \"quests-block noOverflow\" : \"quests-block\" }>\r\n                                { this.state.questions.map((item, index) => (\r\n                                    <div key={index} className={item.completed ? \"quest-item blue\" : index === this.state.currentQuestion ? \"quest-item active\" : \"quest-item\"}>\r\n                                        { item.completed ? <i className=\"fa fa-check\" aria-hidden=\"true\"></i> : index + 1 }\r\n                                    </div>\r\n                                ))\r\n                                \r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"vote-button\">\r\n                                { !this.state.effect ? <div className=\"vote green\" onClick={() => this.doVote(1)} >\r\n                                    <Button variant=\"success\">Согласен</Button>\r\n                                </div> \r\n                                : \r\n                                <div className=\"vote green\">\r\n                                    <Button variant=\"success\">Согласен</Button>\r\n                                </div> }\r\n                                { !this.state.effect ? <div className=\"vote red\" onClick={() => this.doVote(2)}>\r\n                                    <Button variant=\"danger\">Не согласен</Button>\r\n                                </div> \r\n                                : \r\n                                <div className=\"vote red\">\r\n                                    <Button variant=\"danger\">Не согласен</Button>\r\n                                </div> }\r\n                                { !this.state.effect ? <div className=\"vote orange\" onClick={() => this.doVote(3)}>\r\n                                    <Button variant=\"warning\">Воздержался</Button>\r\n                                </div> \r\n                                : \r\n                                <div className=\"vote orange\">\r\n                                    <Button variant=\"warning\">Воздержался</Button>\r\n                                </div> }\r\n                            </div> \r\n                        </div>\r\n                    </Col>\r\n                    <Col xs={6} md={6} lg={3}>\r\n  \r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        ) : <IsLoading />\r\n    }\r\n}\r\n\r\nexport default index;\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { withCookies } from 'react-cookie';\r\nimport './style.css';\r\n\r\nclass index extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = { redirect: false };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.store.checkSession(this.props.cookies.get('auth'))\r\n        this.setState({ redirect: this.isAuthenticated });\r\n    }\r\n\r\n    render() {\r\n\r\n        const { isAuthenticated } = this.props.store;\r\n\r\n        if(this.state.redirect === true) {\r\n            return <Redirect to={{\r\n                pathname: '/',\r\n                state: { from: this.props.location }\r\n            }}/>\r\n        }\r\n\r\n        return isAuthenticated === true ? (\r\n            <div className=\"admin-container\">\r\n                You are in admin panel\r\n            </div>\r\n        ) : <div>Loading...</div>\r\n    }\r\n}\r\n\r\nexport default withCookies(index);\r\n","import Header from './Header/index'\r\nimport Footer from './Footer/index'\r\nimport React, {Component} from 'react'\r\n\r\nclass index extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header store={this.props.store} />\r\n                {this.props.children}\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default index;","import React, {Component} from 'react'\r\n\r\nclass Menu extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Menu\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Menu;","import { AUTH_LOGIN } from 'react-admin';\r\n\r\nexport default (type, params) => {\r\n    if (type === AUTH_LOGIN) {\r\n        const { username, password } = params;\r\n        const request = new Request('https://mydomain.com/authenticate', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ username, password }),\r\n            headers: new Headers({ 'Content-Type': 'application/json' }),\r\n        })\r\n       /* return fetch(request)\r\n            .then(response => {\r\n                if (response.status < 200 || response.status >= 300) {\r\n                    throw new Error(response.statusText);\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(({ token }) => {\r\n                localStorage.setItem('token', token);\r\n            }); */\r\n            localStorage.setItem('token', 'true');\r\n    }\r\n    return Promise.resolve();\r\n}","import React, {Component} from 'react'\r\n\r\nclass Users extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Users\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Users;","import { fetchUtils, Admin, Resource } from 'react-admin';\r\nimport simpleRestProvider from 'ra-data-simple-rest';\r\nimport React, {Component} from 'react'\r\nimport Menu from './menu'; \r\nimport authProvider from './AuthProvide/auth';\r\nimport Users from './Users/index';\r\n\r\nclass index extends Component {\r\n    render() {\r\n\r\n        const httpClient = (url, options = {}) => {\r\n            if (!options.headers) {\r\n                options.headers = new Headers({ Accept: 'application/json' });\r\n            }\r\n            const token = localStorage.getItem('token');\r\n            options.headers.set('Authorization', `Bearer ${token}`);\r\n            return fetchUtils.fetchJson(url, options);\r\n        }\r\n        const dataProvider = simpleRestProvider('https://jsonplaceholder.typicode.com', httpClient);\r\n\r\n        return (\r\n            <Admin authProvider={authProvider} dataProvider={dataProvider}>\r\n                <Resource name=\"posts\" list={Menu} />\r\n                <Resource name=\"users\" list={Users} />\r\n            </Admin>\r\n        )\r\n    }\r\n}\r\n\r\nexport default index;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect, BrowserRouter } from \"react-router-dom\";\nimport './App.css';\nimport CitizenStore from './stores/CitizenStore';\nimport MeterStore from './stores/MeterStore';\nimport MeterMeasurements from './components/Blocks/MeterMeasurements/index';\nimport Payment from './components/Blocks/Payment/index';\nimport Login from './components/Blocks/Login/index';\nimport Header from './components/Layouts/Header/index';\nimport Footer from './components/Layouts/Footer/index';\nimport Profile from './components/Blocks/Profile/index';\nimport MainPage from './components/Blocks/MainPage/index';\nimport 'semantic-ui-css/semantic.min.css'\nimport Register from './components/Blocks/Register/index';\nimport Votes from './components/Blocks/Votes/index';\nimport Admin from './admin/Admin/index';\nimport { withCookies } from 'react-cookie';\nimport Layout from './components/Layouts/layout';\nimport adminLayout from './components/Layouts/admin/layout';\n\nconst store = new CitizenStore();\nconst meterStore = new MeterStore();\n\nclass App extends React.Component {\n\n  componentWillMount() {\n    store.checkSession(this.props.cookies.get('auth'));\n  }\n\n  render() {\n\n    const AppRoute = ({ component: Component, layout: Layout, ...rest }) => (\n      <Route {...rest} render={props => (\n        <Layout store={store}>\n          <Component {...props} />\n        </Layout>\n      )} />\n    )\n    \n    const PrivateRoute = ({ component: Component, layout: Layout, ...rest }) => (\n      <Route {...rest} render={(props) => (\n        store.isAuthenticated === true\n          ? <Layout store={store}><Component {...props} /></Layout>\n          : <Redirect to='/login' />\n      )} />\n    )\n\n    return (\n      <BrowserRouter>\n        <Router basename={'/'}>\n                  <AppRoute path=\"/login\" layout={Layout} component={() => <Login store={store} />} />\n                  <AppRoute path=\"/register\" layout={Layout} component={() => <Register store={store} />} />\n                  <AppRoute exact path=\"/\" layout={Layout} component={() => <MainPage store={store} />} />\n                  <PrivateRoute path=\"/profile\" layout={Layout} component={() => <Profile store={store} />} />\n                  <PrivateRoute path=\"/ad\" layout={Layout} component={() => <Profile store={store} />} />\n                  <PrivateRoute path=\"/votes\" layout={Layout} component={() => <Votes store={store} />} />\n                  <PrivateRoute path=\"/mce\" layout={Layout} component={() => <MeterMeasurements store={meterStore} />} />\n                  <PrivateRoute path=\"/payment\" layout={Layout} component={() => <Payment />} /> \n                  <PrivateRoute path=\"/admin\" layout={adminLayout} component={() => <Admin store={store} />} />          \n        </Router> \n      </BrowserRouter>\n    );\n  }\n}\n\nexport default withCookies(App);\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App'\nimport './index.css'\nimport '../node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\n\nReactDOM.render(\n    <App />,\n document.getElementById('root'))","module.exports = __webpack_public_path__ + \"static/media/Hypp150.47d31ebd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/avatar.ee7644e6.png\";"],"sourceRoot":""}